{"title":"Análisis Univariado","markdown":{"headingText":"Análisis Univariado","containsRefs":false,"markdown":"\n\n## Introducción\n\nLa calidad del aire es un factor clave para la salud pública, el bienestar social y la sostenibilidad ambiental, y California se destaca como uno de los estados más afectados de Estados Unidos por la contaminación atmosférica. La combinación de una alta densidad poblacional, una intensa actividad industrial y vehicular, junto con fenómenos naturales como los incendios forestales, ha hecho que varias de sus ciudades se ubiquen entre las más contaminadas del país. Al mismo tiempo, la temperatura cumple un papel fundamental en la dinámica atmosférica, ya que influye en la dispersión, concentración y formación de contaminantes, además de constituir en sí misma un aspecto crítico para comprender las condiciones ambientales regionales. Frente a este contexto, resulta necesario llevar a cabo un análisis geoespacial que considere tanto la calidad del aire como la temperatura en California, con el fin de identificar patrones espaciales, contrastes regionales y áreas críticas que permitan orientar acciones de mitigación y gestión ambiental.\n\n## Descripción\n\nLos datos objeto de este estudio provienen de la [Agencia de Protección Ambiental (EPA)](https://www.epa.gov/) de los Estados Unidos y corresponden a registros horarios obtenidos de las estaciones de monitoreo durante el mes de marzo de 2024. En partícular, se analizan las variables **Temperatura** y **Ozono (**$O_3$**)**.\n\n### Unidades\n\n-   *Temperatura:* Medido en grados celsius (C°) con una intensidad horaria.\n\n-   *Ozono:* Medido en partes por billón (ppb) con una intensidad horaria.\n\n```{r, warning=FALSE, message=F}\n\n#Librerias necesarias ------------------------------------\n\nset.seed(123)\n\nlibrary(dplyr)\nlibrary(geoR)\nlibrary(sp)\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(sf)\nlibrary(ggplot2)\nlibrary(knitr)\nlibrary(plotly)\nlibrary(leaflet)\nlibrary(raster)\nlibrary(stars)\nlibrary(terra)\n\n#Variale Temperatura --------------------------------------\n\nTemp <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"Temperatura\")\ncolnames(Temp)[-1] <- as.numeric(colnames(Temp)[-1])\nEstacionesT <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"Estaciones\")\nEstacionesT <- EstacionesT %>% mutate(AQSID = as.numeric(AQSID))\nEstacionesT <- EstacionesT %>% filter(AQSID %in% colnames(Temp)[-1])\n\n#Variable Ozono ------------------------------------------\n\nOzono <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"Ozono\")\ncolnames(Ozono)[-1] <- as.numeric(colnames(Ozono)[-1])\nEstacionesOz <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"Estaciones\")\nEstacionesOz <- EstacionesOz %>% mutate(AQSID = as.numeric(AQSID))\nEstacionesOz <- EstacionesOz %>% filter(AQSID %in% colnames(Ozono)[-1])\n\n#Variable velocidad del viento ----------------------------\n\nWS <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"WindSpeed\")\ncolnames(WS)[-1] <- as.numeric(colnames(WS)[-1])\nEstacionesWS <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"Estaciones\")\nEstacionesWS <- EstacionesWS %>% mutate(AQSID = as.numeric(AQSID))\nEstacionesWS <- EstacionesWS %>% filter(AQSID %in% colnames(WS)[-1])\n\n#Variable presión atmosférica -----------------------------\n\nPresion <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"Presion\")\ncolnames(Presion)[-1] <- as.numeric(colnames(Presion)[-1])\nEstacionesPr <- read_excel(\"GeoEst_Cali.xlsx\", sheet = \"Estaciones\")\nEstacionesPr <- EstacionesPr %>% mutate(AQSID = as.numeric(AQSID))\nEstacionesPr <- EstacionesPr %>% filter(AQSID %in% colnames(Presion)[-1])\n\n\n#Para el mapa de California -------------------------------\n\nsh_mundos<-st_read(\"admin00.shp\",quiet=TRUE)\nsh_mundos <- sh_mundos %>% filter(CNTRY_NAME==\"United States\")\nsh_mundos <- sh_mundos %>% filter(ADMIN_NAME==\"California\")\n\nCRS_UTM_NY = \"+init=epsg:3310\"\n\nsh_mundos_wgs84 <- st_transform(sh_mundos, crs = 4326)\n\nsh_mundos_utm <- st_transform(sh_mundos, crs = CRS(\"EPSG:3310\"))\n\nsh_mundos_sp_utm <- as(sh_mundos_utm, \"Spatial\")\n\nsh_mundos_utm_simple <- st_union(sh_mundos_utm)\nsh_mundos_sp_utm_simple <- as(sh_mundos_utm_simple, \"Spatial\")\n\n#Grilla para hacer kriging ------------------------------\n\nnew <- sp::spsample(as(sh_mundos_utm, \"Spatial\"), n = 50000, type = \"regular\")\n\nproj4string(new) <- CRS(\"EPSG:3310\")\ninvisible(coordinates(new) ~ Este + Norte)\ncolnames(new@coords) <- c(\"Este\", \"Norte\")\n\n#Gráficos de dispersión ----------------------------------\n\nsimple_scatter_plot <- function(datos, variable1, variable2) {\n\n    plot1 <- ggplot(as.data.frame(datos),\n                    aes(x = .data[[variable1]], y = .data[[variable2]],\n                               color = as.factor(1))) +\n                    geom_point() +\n                    scale_colour_viridis_d() +\n                    labs(\n                        x = variable1,\n                        y = variable2\n                        ) +\n                    theme_light() +\n                    theme(legend.position = \"none\")\n\n    return(plot1)\n\n}\n\n```\n\n## Análisis geoestadístico\n\n### Variable Ozono\n\nSe tomaron los datos de Temperatura de la madrugada el primero de marzo de 2024:\n\n```{r, message=F, warning=F}\n\ny_oz <- Ozono[1,] #Tomar una fecha\ny_oz <- cbind(colnames(y_oz),t(y_oz[1,]))\ny_oz <- y_oz[-1,]\ny_oz <- as.data.frame(y_oz)\ny_oz <- na.omit(y_oz)\ny_oz$V1 <- as.numeric(y_oz$V1)\ny_oz <- inner_join(y_oz, EstacionesOz, by=c(\"V1\"=\"AQSID\"))\ndatosOZ <- y_oz[,c(13,14,2)] #DatosOz es la base con coordenadas + variable\ncolnames(datosOZ)=c(\"Este\",\"Norte\",\"Ozono\")\ndatosOZ$Ozono <- as.numeric(datosOZ$Ozono)\n\ndatosOZ_sf <- st_as_sf(datosOZ, coords = c(\"Este\", \"Norte\"), crs = 3310)\n\ndatosO_sf_wgs84 <- st_transform(datosOZ_sf, crs = 4326)\n\npalO <- colorNumeric(palette = \"viridis\", domain = datosO_sf_wgs84$Ozono)\n\nleaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addPolygons(data = sh_mundos_wgs84, fill = FALSE, color = \"black\", weight = 2) %>%\n  addCircleMarkers(data = datosO_sf_wgs84,\n                   fillColor = ~palO(Ozono),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"Ozono:\", Ozono, \"°C\")) %>%\n  addLegend(pal = palO, values = datosO_sf_wgs84$Ozono, title = \"Ozono (ppb)\")\n\nozone <- as.geodata(datosOZ) \npander::pander(summary(ozone))\n\n```\n\n::: panel-tabset\n#### Gráficos de dispersión\n\n```{r}\npO1 <- simple_scatter_plot(datosOZ, \"Este\", \"Ozono\")\npO2 <- simple_scatter_plot(datosOZ, \"Norte\", \"Ozono\")\n\ncowplot::plot_grid(pO1,pO2)\n\n```\n\n#### GeoR\n\n```{r}\nplot(ozone, qt.col = c(\"purple\",\n                          \"pink\",\n                          \"green\",\n                          \"yellow\"),\n     scatter3d=T)\n```\n:::\n\nEl gráfico muestra una relación polinomial de la variable Ozono con respecto a las coordenadas en Norte. Se prueba con varios modelos hasta encontrar aquel que mitigue el efecto espacial.\n\n#### Modelo para la Media\n\nEl modelo que mejor atrapa el efecto de la media es:\n\n$$Ozono = \\beta_0+\\beta_1 \\times Norte^2 + \\beta_2 \\times Norte^3 + \\beta_3 \\times Este$$\n\n```{r}\nfitO <- lm(Ozono~I(Norte^2)+I(Norte^3)+Este, data = datosOZ) \npander::pander(summary(fitO))\n```\n\nGráficamente se observa una mitigación en la tendencia espacial:\n\n::: panel-tabset\n##### Gráficos de dispersión\n\n```{r}\ndatosOZ$Residuos <- fitO$residuals\n\npO1 <- simple_scatter_plot(datosOZ, \"Este\", \"Residuos\")\npO2 <- simple_scatter_plot(datosOZ, \"Norte\", \"Residuos\")\n\ncowplot::plot_grid(pO1,pO2)\n\n```\n\n##### GeoR\n\n```{r}\nplot(ozone, qt.col = c(\"purple\",\n                          \"pink\",\n                          \"green\",\n                          \"yellow\"),\n     scatter3d=T, trend = ~ poly(Norte,3))\n```\n:::\n\n#### Estimación Empírica del Semivariograma\n\nA continuación, se presenta la estimación del semivariograma obtenida con la función variog. Se muestran dos gráficos comparativos: el primero corresponde a los datos originales (sin eliminar la tendencia) y el segundo a los residuales obtenidos tras ajustar el modelo de regresión, lo que permite observar el efecto de remover la tendencia en la estructura espacial.\n\n```{r, message=FALSE, results='hide'}\nvg_O <- variog(ozone,estimator.type = \"modulus\", pairs.min=50) #Sin tendencia espacial\n\nvg1_O <- variog(ozone, trend = ~I(Norte^2)+I(Norte^3)+Este, estimator.type = \"modulus\", pairs.min=50)\n```\n\n::: panel-tabset\n##### Con tendencia\n\n```{r}\nplot(vg_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Sin remover tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n\n##### Removiendo Tendencia\n\n```{r}\nplot(vg1_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Removiendo tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n:::\n\nSe observa que la estimación de la semivarianza de la variable incrementos es más estable y presenta valores más bajos al remover la tendencia, lo que indica que en este caso el semivariograma refleja de manera más adecuada la verdadera estructura espacial del fenómeno.\n\n```{r}\nplot(vg1_O$u, vg1_O$n, type=\"b\",\n     xlab=\"distance\", ylab=\"n pairs\",\n     main=\"Número de pares por bin\")\n```\n\n#### Estimación del Modelo Teórico de Semivariograma\n\nLos modelos obtenidos ajustanto por EyeFit, son:\n\n``` text\ncov.model sigmasq      phi tausq kappa kappa2 practicalRange\n1    matern    17.0 440676.0     5   0.5     NA        1320147\n2  gneiting    17.5 803585.6     9    NA     NA        1371348\n3    linear    0.25 0.32     0    NA     NA            Inf\n```\n::: panel-tabset\n\n##### Matern\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n\nsigma_0_mO <- 12.0\nphi_0_mO <- 224249.7\nnugget_0_mO <- 2.00 \nkappa_0_mO <- 0.2\n\nini1_mat_O <- c(sigma_0_mO, phi_0_mO)\nfitvar1_mat_O <- variofit(vg1_O,\n                    cov.model = \"matern\",\n                    ini1_mat_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_mO,\n                    kappa = kappa_0_mO,\n                    wei = \"equal\")\n\nfitvar2_mat_O <- variofit(vg1_O,\n                    cov.model = \"matern\",\n                    ini1_mat_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_mO,\n                    kappa = kappa_0_mO,\n                    wei = \"npairs\")\n\nfitvar3_mat_O <- variofit(vg1_O,\n                    cov.model = \"matern\",\n                    ini1_mat_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_mO,\n                    kappa = kappa_0_mO,\n                    wei = \"cressie\")\n\nfitvar4_mat_O <- likfit(ozone,\n                  coords = ozone$coords,\n                  data = ozone$data,\n                  trend = ~ I(Norte^2) + I(Norte^3) + Este,\n                  ini.cov.pars = ini1_mat_O,\n                  fix.nugget = F,\n                  nugget = nugget_0_mO,\n                  kappa = kappa_0_mO,\n                  cov.model = \"matern\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_mat_O, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_mat_O, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_mat_O, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_mat_O, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n```\n\n##### Gneiting\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n\nsigma_0_gO <- 17.5\nphi_0_gO <- 803585.6\nnugget_0_gO <- 9\n\nini1_g_O <- c(sigma_0_gO, phi_0_gO)\nfitvar1_g_O <- variofit(vg1_O,\n                    cov.model = \"gneiting\",\n                    ini1_g_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_gO,\n                    wei = \"equal\")\n\nfitvar2_g_O <- variofit(vg1_O,\n                    cov.model = \"gneiting\",\n                    ini1_g_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_gO,\n                    wei = \"npairs\")\n\nfitvar3_g_O <- variofit(vg1_O,\n                    cov.model = \"gneiting\",\n                    ini1_g_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_gO,\n                    wei = \"cressie\")\n\nfitvar4_g_O <- likfit(ozone,\n                  coords = ozone$coords,\n                  data = ozone$data,\n                  trend = ~ I(Norte^2) + I(Norte^3) + Este,\n                  ini.cov.pars = ini1_g_O,\n                  fix.nugget = F,\n                  nugget = nugget_0_gO,\n                  cov.model = \"gneiting\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_g_O, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_g_O, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_g_O, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_g_O, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n```\n\n##### Exponencial\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n\nsigma_0_lO <- 10\nphi_0_lO <- 6e5\nnugget_0_lO <- 10\n\nini1_l_O <- c(sigma_0_lO, phi_0_lO)\nfitvar1_l_O <- variofit(vg1_O,\n                    cov.model = \"exponential\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"equal\")\n\nfitvar2_l_O <- variofit(vg1_O,\n                    cov.model = \"exponential\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"npairs\")\n\nfitvar3_l_O <- variofit(vg1_O,\n                    cov.model = \"exponential\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"cressie\")\n\nfitvar4_l_O <- likfit(ozone,\n                  coords = ozone$coords,\n                  data = ozone$data,\n                  trend = ~ I(Norte^2) + I(Norte^3) + Este,\n                  ini.cov.pars = ini1_l_O,\n                  fix.nugget = F,\n                  nugget = nugget_0_lO,\n                  cov.model = \"exponential\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_l_O, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_l_O, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_l_O, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_l_O, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\n```\n\n##### Esférico\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n\nsigma_0_lO <- 10\nphi_0_lO <- 6e5\nnugget_0_lO <- 10\n\nini1_l_O <- c(sigma_0_lO, phi_0_lO)\nfitvar1_es_O <- variofit(vg1_O,\n                    cov.model = \"spherical\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"equal\")\n\nfitvar2_es_O <- variofit(vg1_O,\n                    cov.model = \"spherical\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"npairs\")\n\nfitvar3_es_O <- variofit(vg1_O,\n                    cov.model = \"spherical\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"cressie\")\n\nfitvar4_es_O <- likfit(ozone,\n                  coords = ozone$coords,\n                  data = ozone$data,\n                  trend = ~ I(Norte^2) + I(Norte^3) + Este,\n                  ini.cov.pars = ini1_l_O,\n                  fix.nugget = F,\n                  nugget = nugget_0_lO,\n                  cov.model = \"spherical\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_es_O, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_es_O, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_es_O, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_es_O, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\n```\n\n##### Cúbico\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n\nsigma_0_lO <- 10\nphi_0_lO <- 6e5\nnugget_0_lO <- 10\n\nini1_l_O <- c(sigma_0_lO, phi_0_lO)\nfitvar1_c_O <- variofit(vg1_O,\n                    cov.model = \"cubic\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"equal\")\n\nfitvar2_c_O <- variofit(vg1_O,\n                    cov.model = \"cubic\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"npairs\")\n\nfitvar3_c_O <- variofit(vg1_O,\n                    cov.model = \"cubic\",\n                    ini1_l_O,\n                    fix.nugget = F,\n                    nugget = nugget_0_lO,\n                    wei = \"cressie\")\n\nfitvar4_c_O <- likfit(ozone,\n                  coords = ozone$coords,\n                  data = ozone$data,\n                  trend = ~ I(Norte^2) + I(Norte^3) + Este,\n                  ini.cov.pars = ini1_l_O,\n                  fix.nugget = F,\n                  nugget = nugget_0_lO,\n                  cov.model = \"cubic\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_c_O, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_c_O, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_c_O, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_c_O, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\n```\n:::\n\n#### Kriging\n\nUsando el modelo exponencial:\n\n```{r}\nplot(vg1_O,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Modelo exponencial para Ozono\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar3_l_O, col=\"#008B00\", lwd=1.5)\n\n```\n\n\n```{r, message=F, warning=F, results='hide'}\n\n#Se ajusta el mejor modelo -------------------------------\n\nbest_model_O <- gstat::vgm(psill = fitvar3_l_O$cov.pars[1],\n                           model = \"Exp\",\n                           range = fitvar3_l_O$cov.pars[2],\n                           nugget = fitvar3_l_O$nugget\n                           \n)\n\n# Se crea un objeto en gstat ------------------------------\n\ncoordinates(datosOZ) <- ~Este + Norte\nproj4string(datosOZ) <- CRS(\"EPSG:3310\")\n\ng_obj<-gstat::gstat(id=\"Ozono\",\n             formula = Ozono ~ I(Norte^2) + I(Norte^3) + Este,\n             model = best_model_O,\n             data = datosOZ)\n\n#Kriging ------------------------------------------------\n\ninvisible(predic <- predict(g_obj, newdata = new, nmin = 20))\n\n\n#Mapas de predicción -------------------------------------\n\ngridded(predic) <- TRUE\n\n#1. Mapa de Kriging --------------------------------------\n\npredic_raster_utm <- raster(predic, layer = \"Ozono.pred\")\n\ncrs(predic_raster_utm) <- \"+init=epsg:3310\"\n\npredic_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        predic_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmin_pred <- raster::cellStats(predic_raster_wgs84, stat='min')\nmax_pred <- raster::cellStats(predic_raster_wgs84, stat='max')\n\npred_range <- c(minValue(predic_raster_wgs84), maxValue(predic_raster_wgs84))\n\nstep_pred <- (max_pred-min_pred)/ 6\n\nbins <- round(seq(min_pred, max_pred, by=step_pred),0)\n\npal_pred <- colorBin(\n  palette = \"viridis\", # La paleta de colores\n  domain = pred_range,\n  bins = bins,\n  na.color = \"transparent\"\n)\n\nmapa_kriging_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    predic_raster_wgs84, \n    colors = pal_pred, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n    addCircleMarkers(data = datosO_sf_wgs84,\n                   fillColor = ~palO(Ozono),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"Ozn:\", Ozono, \"ppb\")) %>% \n  \n  addLegend(\n    pal = pal_pred, \n    values = pred_range,\n    title = \"Predicción Oz ppb\",\n    position = \"topright\"\n  ) %>%\n  \n  addLegend(pal = palO,\n            values = datosO_sf_wgs84$Ozono,\n            title = \"Ozono Observado\",\n    position = \"topleft\"\n  ) \n\n#2 Mapa Varianza------------------------------------------\n\nvar_raster_utm <- raster(predic, layer = \"Ozono.var\")\n\ncrs(var_raster_utm) <- \"+init=epsg:3310\"\n\nvar_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        var_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmax_var <- raster::cellStats(var_raster_wgs84, stat='max')\nstep_var <- max_var / 6\n\nbinsv <- round(seq(0, max_var, by=step_var),2)\n\nvar_range <- c(minValue(var_raster_wgs84), maxValue(var_raster_wgs84))\npal_var <- colorBin(\n  palette = \"Spectral\", # La paleta de colores\n  domain = var_range,\n  bins = binsv,\n  na.color = \"transparent\"\n)\n\nmapa_var_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    var_raster_wgs84,\n    colors = pal_var, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  addLegend(\n    pal = pal_var, \n    values = var_range,\n    title = \"Varianza\",\n    position = \"topright\"\n  ) \n\n#3. Mapa Cv ----------------------------------------------\n\ncv_raster_utm <- sqrt(var_raster_utm) / abs(predic_raster_utm)\n\nmapa_mayor_a_uno <- cv_raster_utm > 1\ncv_raster_utm[mapa_mayor_a_uno] <- 1\n\ncrs(cv_raster_utm) <- \"+init=epsg:3310\"\n\ncv_terra <- terra::rast(cv_raster_utm)\nsh_terra <- terra::vect(sh_mundos_sp_utm_simple)\n\nmasked_cv_terra <- terra::mask(cv_terra, sh_terra)\n\ncv_raster_wgs84_terra <- terra::project(\n    masked_cv_terra, \n    y = \"epsg:4326\", \n    method = \"bilinear\" # Similar a projectRaster\n)\n\ncv_raster_wgs84 <- raster::raster(cv_raster_wgs84_terra)\n\nmax_cv <- raster::cellStats(cv_raster_wgs84, stat='max')\nstep_cv <- max_cv / 10\n\nbincv <- seq(0,max_cv, by=step_cv)\n\ncv_range <- c(minValue(cv_raster_wgs84), maxValue(cv_raster_wgs84))\n\npal_cv <- colorBin(\n  palette = \"RdYlGn\", # Rojo-Amarillo-Verde\n  domain = cv_range,\n  na.color = \"transparent\",\n  bins = bincv,\n  reverse = TRUE\n)\n\nmapa_cv_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    cv_raster_wgs84,\n    colors = pal_cv, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  addLegend(\n    pal = pal_cv, \n    values = cv_range,\n    title = \"Coeficiente de Variación\",\n    position = \"topright\"\n  )\n\n```\n\n::: panel-tabset\n##### Predicción\n\n```{r}\nmapa_kriging_leaflet\n```\n\n##### Varianza\n\n```{r}\nmapa_var_leaflet\n```\n\n##### Coeficiente de variación\n\n```{r}\nmapa_cv_leaflet\n```\n\n:::\n\n### Variable Temperatura\n\nSe tomaron los datos de Temperatura de la madrugada el primero de marzo de 2024:\n\n```{r, message=F, warning=F}\ny_T <- Temp[1,] #Tomar una fecha\ny_T <- cbind(colnames(y_T),t(y_T[1,]))\ny_T <- y_T[-1,]\ny_T <- as.data.frame(y_T)\ny_T <- na.omit(y_T)\ny_T <- y_T[-which.min(y_T$V2),]\ny_T$V1 <- as.numeric(y_T$V1)\ny_T <- inner_join(y_T, EstacionesT, by=c(\"V1\"=\"AQSID\"))\ndatosT <- y_T[,c(13,14,2)]\ncolnames(datosT)=c(\"Este\",\"Norte\",\"Temperatura\")\ndatosT$Temperatura <- as.numeric(datosT$Temperatura)\n\ndatosT_sf <- st_as_sf(datosT, coords = c(\"Este\", \"Norte\"), crs = 3310)\n\ndatosT_sf_wgs84 <- st_transform(datosT_sf, crs = 4326)\n\npal <- colorNumeric(palette = \"viridis\", domain = datosT_sf_wgs84$Temperatura)\n\nleaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addPolygons(data = sh_mundos_wgs84, fill = FALSE, color = \"black\", weight = 2) %>%\n  addCircleMarkers(data = datosT_sf_wgs84,\n                   fillColor = ~pal(Temperatura),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"Temp:\", Temperatura, \"°C\")) %>%\n  addLegend(pal = pal, values = datosT_sf_wgs84$Temperatura, title = \"Temperatura (°C)\")\n\ntemp <- as.geodata(datosT) \npander::pander(summary(temp))\n\n```\n\n::: panel-tabset\n#### Gráficos de dispersión\n\n```{r}\npT1 <- simple_scatter_plot(datosT, \"Este\", \"Temperatura\")\npT2 <- simple_scatter_plot(datosT, \"Norte\", \"Temperatura\")\n\ncowplot::plot_grid(pT1,pT2)\n```\n\n#### GeoR\n\n```{r}\nplot(temp, qt.col = c(\"purple\",\n                    \"pink\",\n                    \"green\",\n                    \"yellow\"),\n     scatter3d=T)\n```\n:::\n\nEn el gráfico se observa un agrupamiento en las coordenadas Norte con respecto a los datos, que puede llegar a corregirse con algún polinomio. Se probará con diferentes modelos a ver si se puede llegar a disminuir el efecto espacial.\n\n#### Modelo para la Media\n\nEl modelo que mejor atrapa el efecto de la media es:\n\n$$\nTemperatura = \\beta_0 + \\beta_1 \\times Norte + \\beta_2 \\times Norte^2\n$$\n\n```{r}\nfitT <- lm(Temperatura~Norte+I(Norte^2), data = datosT) \npander::pander(summary(fitT))\n```\n\nObservamos el comportamiento de sus residuales podemos notar que el modelo ayudo a reducir el efecto espacial.\n\n::: panel-tabset\n##### Gráficos de dispersión\n\n```{r}\ndatosT$Residuos <- fitT$residuals\n\npT1 <- simple_scatter_plot(datosT, \"Este\", \"Residuos\")\npT2 <- simple_scatter_plot(datosT, \"Norte\", \"Residuos\")\n\ncowplot::plot_grid(pT1,pT2)\n\n```\n\n##### GeoR\n\n```{r}\nplot(temp, qt.col = c(\"purple\",\n                    \"pink\",\n                    \"green\",\n                    \"yellow\"),\n     scatter3d=T, trend=~Norte+I(Norte^2))\n```\n:::\n\n#### Estimación Empírica del Semivariograma\n\np¿Presentamos la estimación del semivariograma obtenida mediante la función variog para la variable temperatura. Se comparan los resultados al calcularlo directamente sobre los datos originales (sin remover la tendencia) y al utilizar los residuales de un modelo de regresión, con el objetivo de analizar cómo influye la presencia de tendencia en la estructura espacial.\n\n```{r, results='hide'}\nvg_T <- variog(temp, estimator.type = \"modulus\", pairs.min=50) #Sin tendencia espacial\n\nvg1_T <- variog(temp, trend = ~Norte+I(Norte^2),\n                estimator.type = \"modulus\", pairs.min=50)\n\n```\n\n::: panel-tabset\n##### Con tendencia\n\n```{r}\nplot(vg_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Sin remover tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n\n##### Removiendo tendencia\n\n```{r}\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Removiendo tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n:::\n\nCuando no se remueve la tendencia, la semivarianza alcanza valores más altos y presenta una forma aparentemente más regular, aunque dicha regularidad está influenciada por la tendencia global de los datos. En cambio, al eliminar la tendencia, los valores de semivarianza disminuyen y el patrón pierde suavidad, pero el variograma refleja con mayor fidelidad la verdadera dependencia espacial.\n\n```{r}\nplot(vg1_T$u, vg1_T$n, type=\"b\",\n     xlab=\"distance\", ylab=\"n pairs\",\n     main=\"Número de pares por bin\")\n```\n\nEn este caso, el último punto corresponde a menos de 25 pares de observaciones, por lo que su interpretación resulta menos confiable.\n\n#### Estimación del Modelo Teórico de Semivariograma\n\n```{r}\n\n\ndist_matrix_T <- as.matrix(dist(temp$coords))\n\n#1. Funciones de correlación, covarianza y semivarianza: ----\n\n#1.1 Modelo exponencial ----\n\nrho_exp <- function(h, phi){\n  exp(-(h/phi)) #Correlacion espacial\n}\n\ncov_exp <- function(sigma, h, phi){\n  sigma*rho_exp(h, phi) #Covarianza espacial\n}\n\nsv_exp <- function(nugget, sigma, h, phi){\n  nugget + sigma - cov_exp(sigma, h, phi) #Semivarianza espacial\n} \n\n#1.2 Modelo Gaussianio ----\n\nrho_gauss <- function(h, phi){\n  exp(-(h/phi)^2)\n}\n\ncov_gauss <- function(sigma, h, phi){\n  sigma*rho_gauss(h, phi) #Covarianza espacial\n}\n\nsv_gauss <- function(nugget, sigma, h, phi){\n  nugget + sigma - cov_gauss(sigma, h, phi) #Semivarianza espacial\n}\n#1.3 Modelo Gneting ----\n\ncov_gneiting <- function(h){\n  s <- 0.301187465825\n  ifelse(0<= s*h &  s*h <= 1,\n  (1 + 8*s*h + 25*(s*h)^2 + 32*(s*h)^3) * (1-s*h)^8,\n  0)\n}\n\nsv_gneiting <- function(nugget, sigma, h){\n  nugget + sigma - cov_gneiting(h) #Semivarianza espacial\n}\n\n#1.4 Modelo Spherical ----\n\nrho_spherical <- function(h, phi){\n  ifelse(h<phi,\n         1 - 1.5*(h/phi) + 0.5*(h/phi)^3,\n         0)\n}\n\ncov_spherical <- function(sigma, h, phi){\n  sigma*rho_spherical(h, phi) #Covarianza espacial\n}\n\nsv_spherical <- function(nugget, sigma, h, phi){\n  nugget + sigma - cov_spherical(sigma, h, phi) #Semivarianza espacial\n}\n\n#1.5 Modelo Matern ----\n\nrho_matern <- function(h, phi, kappa){\n  (1/(2*gamma(kappa))) * (h/phi)^kappa * besselK((h/phi), kappa)\n}\n\ncov_matern <- function(sigma, h, phi, kappa){\n  sigma*rho_matern(h, phi, kappa) #Covarianza espacial\n}\n\nsv_matern <- function(nugget, sigma, h, phi, kappa){\n  nugget + sigma - cov_matern(sigma, h, phi, kappa) #Semivarianza espacial\n}\n\n#1.6 Modelo Coseno -----------------\n\ncov_cos <- function(sigma, h, phi){\n  sigma * cos(h/phi)\n}\n\ncos_sv <- function(nugget, sigma, h, phi){\n  nugget +  sigma *(1 - cos(h/phi))\n}\n\n#1.7 Modelo wave ------\n\n\nrho_wave <- function(h, sigma, phi){\n  ifelse(h == 0,\n         1,\n         (phi / h) * sin(h / phi))\n}\n\nsv_wave <- function(nugget, sigma, h, phi) {\n  ifelse(h == 0,\n         nugget,\n         nugget + sigma - sigma * (phi / h) * sin(h / phi))\n}\n\ncov_wave <- function(h, sigma, phi, nugget) {\n  ifelse(h == 0,\n         sigma,\n         sigma * (phi / h) * sin(h / phi))\n}\n\n\n#2. Función para estimar por WLS----\n\nMSE_ponderados <- function(par, h, gamma,kappa=NA,w, model, n, pesos){\n  nugget <- par[1]\n  sigma <- par[2]\n  phi <- par[3]\n  \n  gamma_hat <- switch(model,\n                      \"exponencial\" = sv_exp(nugget, sigma, h, phi),\n                      \"gaussian\"    = sv_gauss(nugget, sigma, h, phi),\n                      \"gneiting\"    = sv_gneiting(nugget, sigma, h, phi),\n                      \"spherical\"   = sv_spherical(nugget, sigma, h, phi),\n                      \"matern\"      = sv_matern(nugget, sigma, h, phi, kappa),\n                      \"cos\"         = cos_sv(nugget, sigma, h, phi)\n  )\n  \n  w <- switch(pesos,\n              \"Cressie\" = 1/(2*(2*gamma_hat)^2/n),\n              \"n\" = 1/n,\n              \"h/n\" = 1/(h/n),\n              \"I\" = 1)\n  \n  sum(w*(gamma - gamma_hat)^2)\n}\n\n\nest_sev_WLS <- function(par, kappa = NA, model, h, gamma, n){\n  sigma_0 <- par[1]\n  phi_0 <- par[2]\n  nugget_0 <- par[3]\n  kappa_0 <- kappa\n  \n  # Selección de función\n  sv <- switch(model,\n               \"exponencial\" = sv_exp,\n               \"gaussian\"    = sv_gauss,\n               \"spherical\"   = sv_spherical,\n               \"gneiting\"    = sv_gneiting,\n               \"matern\"      = sv_matern,\n               \"cos\" = cos_sv\n  )\n  \n  args_sv <- names(formals(sv))\n  \n  args_list <- list(\n    nugget = nugget_0,\n    sigma  = sigma_0,\n    h      = h,\n    phi    = phi_0,\n    kappa  = kappa_0\n  )\n  \n  args_list <- args_list[names(args_list) %in% args_sv]\n  \n  sv_ini <- do.call(sv, args_list)\n  \n  formula_sv <- switch(model,\n                       \"gneiting\" = gamma ~ sv(nugget, sigma, h),\n                       \"matern\" = gamma ~ sv(nugget, sigma, h, phi, kappa),\n                       gamma ~ sv(nugget, sigma, h, phi)\n  )\n  \n  start_list <- switch(model,\n                       \"gneting\" = list(nugget = nugget_0, sigma = sigma_0),\n                       \"matern\" = list(nugget = nugget_0, sigma = sigma_0, phi = phi_0, kappa = kappa_0),\n                       list(nugget = nugget_0, sigma = sigma_0, phi = phi_0)\n  )\n    \n    #1. Ponderación de Bessel\n    \n    WW <- (2*(2*sv_ini)^2/n)\n    \n    Bessel <- nls(formula = formula_sv,\n                  start = start_list,\n                  weights = 1/WW,\n                  lower = c(0, rep(1e-6, length(start_list)-1)),\n                  control = nls.control(maxiter = 500, warnOnly = TRUE))\n    \n    ini_Bessel<-coef(Bessel)\n    \n    #1.1 Optim Bessel\n    \n    optim_bessel <- optim(\n      par = coef(Bessel),\n      fn = MSE_ponderados,\n      h = h,\n      gamma = gamma,\n      pesos = \"Cressie\",\n      model = model,\n      n = n,\n      method = \"L-BFGS-B\",\n      lower = c(0, rep(1e-6, length(start_list)-1))\n    )\n    \n    par_optim_Bess <- optim_bessel$par[c(\"nugget\", \"sigma\", \"phi\")]\n    \n    #2. Ponderación 1/n\n    \n    W1 <- n\n    \n    n_pond <- nls(formula = formula_sv,\n                  start = start_list,\n                  weights = 1/W1,\n                  lower = c(0, rep(1e-6, length(start_list)-1)),\n                  control = nls.control(maxiter = 500, warnOnly = TRUE))\n    \n    ini_n<-coef(n_pond)\n    \n    #2.1 Optimización 1/n\n    \n    optim_n <- optim(\n      par = coef(n_pond),\n      fn = MSE_ponderados,\n      h = h,\n      gamma = gamma,\n      pesos = \"n\",\n      n = n,\n      model = model,\n      method = \"L-BFGS-B\",\n      lower = c(0, rep(1e-6, length(start_list)-1))\n    )    \n    \n    par_optim_n <- optim_n$par[c(\"nugget\", \"sigma\", \"phi\")]\n    \n    \n    #3. Ponderación h/n\n    \n    W2 <- h/n\n    \n    h_n_pond <- nls(formula = formula_sv,\n                    start = start_list,\n                    weights = 1/W2,\n                    lower = c(0, rep(1e-6, length(start_list)-1)),\n                    control = nls.control(maxiter = 500, warnOnly = TRUE))\n    \n    ini_h_n<-coef(h_n_pond)\n    \n    optim_h_n <- optim(\n      par = coef(h_n_pond),\n      fn = MSE_ponderados,\n      h = h,\n      gamma = gamma,\n      pesos = \"h/n\",\n      model = model,\n      n = n,\n      method = \"L-BFGS-B\",\n      lower = c(0, rep(1e-6, length(start_list)-1))\n    )    \n    \n    par_optim_h_n <- optim_h_n$par[c(\"nugget\", \"sigma\", \"phi\")]\n    \n\nres <- list(Bessel = list(Iniciales = ini_Bessel,\n                           Optimizados = par_optim_Bess),\n            `1/n` = list(Iniciales = ini_n,\n                          Optimizados = par_optim_n),\n            `h/n` = list(Iniciales = ini_h_n,\n                          Optimizados = par_optim_h_n))    \nreturn(res)\n}\n\nMSE_sv <- function(gamma_hat, par, kappa, model, h){\n  sigma_0 <- par[[2]]\n  phi_0 <- par[[3]]\n  nugget_0 <- par[[1]]\n  kappa_0 <- kappa\n  \n  sv <- switch(model,\n               \"exponencial\" = sv_exp,\n               \"gaussian\"    = sv_gauss,\n               \"spherical\"   = sv_spherical,\n               \"gneiting\"    = sv_gneiting,\n               \"matern\"      = sv_matern,\n               \"cos\" = cos_sv,\n               \"wave\" = sv_wave\n  )\n  \n  args_sv <- names(formals(sv))\n  \n  args_list <- list(\n    nugget = nugget_0,\n    sigma  = sigma_0,\n    h      = h,\n    phi    = phi_0,\n    kappa  = kappa_0\n  )\n  \n  args_list <- args_list[names(args_list) %in% args_sv]\n  \n  sv_est <- do.call(sv, args_list)\n  \n  return(mean((sv_est-gamma_hat)^2))\n}\n\n#3. Función para etimar por máxima verosimilitud\n\nloglik <- function(par, kappa=NA, z, dist_matrix, model){\n  sigma_0 <- par[1]\n  phi_0 <- par[2]\n  nugget_0 <- par[3]\n  kappa_0 <- kappa\n  \n  cov <- switch(model,\n               \"exponencial\" = cov_exp,\n               \"gaussian\"    = cov_gauss,\n               \"spherical\"   = cov_spherical,\n               \"gneiting\"    = cov_gneiting,\n               \"matern\"      = cov_matern\n  )\n  \n  args_cov <- names(formals(cov))\n  \n  args_list <- list(\n    sigma  = sigma_0,\n    nugget = nugget_0,\n    h      = dist_matrix,\n    phi    = phi_0,\n    kappa  = kappa_0\n  )\n  \n  args_list <- args_list[names(args_list) %in% args_cov]\n  \n  Sigma <- do.call(cov, args_list) \n  diag(Sigma) = diag(Sigma) + nugget_0\n  \n  # Descomposición de Cholesky (más estable que solve o det)\n  inv_Sigma <- solve(Sigma)\n  det <- log(det(Sigma))\n  \n  # Log-verosimilitud del modelo Gaussiano\n  z <- z \n  n <- length(z)\n  ll <- -0.5 * (n * log(2 * pi) + det + crossprod(z, inv_Sigma %*% z))  # Log-verosimilitud (negativa porque optim minimiza)\n  return(-ll)\n}\n\n```\n\nLos modelos obtenidos ajustanto por EyeFit, son:\n\n``` text\n\ncov.model sigmasq      phi tausq kappa kappa2 practicalRange\n1 exponential   10.74 109166.3  2.07    NA     NA       327033.0\n2    gaussian   10.00  80000.0  2.07    NA     NA       138465.5\n3   spherical   10.00 157832.8  2.07    NA     NA       157832.8\n```\n\n```{r, warning=FALSE, message=FALSE}\n\nvariog_T <- data.frame(h = vg1_T$u, gamma_hat = vg1_T$v,\n                       n = vg1_T$n)\n\nrange_sv_T <- seq(1,max(variog_T$h), by=1000)\n\n# Modelo exponencial ----\n\nsigma_0_eT <- 10.74\nphi_0_eT <- 109166.3\nnugget_0_eT <- 2.07\n\npar_eT <- c(sigma_0_eT, phi_0_eT, nugget_0_eT)\n\nres_e_T <- est_sev_WLS(par=par_eT, kappa = NA,\n                       model=\"exponencial\",\n                       h=variog_T$h,\n                       gamma = variog_T$gamma_hat,\n                       n = variog_T$n)\n\nMLE_eT <- optim(fn = loglik,\n             par = par_eT,\n             kappa=NA,\n             z = datosT$Residuos, \n             dist_matrix=dist_matrix_T,\n             model = \"exponencial\",\n             method = \"L-BFGS-B\",\n             lower = c(0, 0, 0))\n\nestsv_exp_Bess_T <- do.call(sv_exp, c(as.list(res_e_T$Bessel$Optimizados), list(h = range_sv_T)))\nestsv_exp_n_T <- do.call(sv_exp, c(as.list(res_e_T$`1/n`$Optimizados), list(h = range_sv_T)))\nestsv_exp_h_n_T <- do.call(sv_exp, c(as.list(res_e_T$`h/n`$Optimizados), list(h = range_sv_T)))\nestsv_exp_MLE_T <- do.call(sv_exp, c(list(nugget = MLE_eT$par[3], phi = MLE_eT$par[2] , sigma = MLE_eT$par[1],h = range_sv_T)))\n\n# Modelo Gaussiano ----\n\nsigma_0_gT <- 10.00    \nphi_0_gT <- 80000.0\nnugget_0_gT <- 2.07\n\npar_gT <- c(sigma_0_gT, phi_0_gT, nugget_0_gT)\n\nres_g_T <- est_sev_WLS(par=par_gT, kappa = NA,\n                       model=\"gaussian\",\n                       h=variog_T$h,\n                       gamma = variog_T$gamma_hat,\n                       n = variog_T$n)\n\nestsv_g_Bess_T <- do.call(sv_gauss, c(as.list(res_g_T$Bessel$Optimizados), list(h = range_sv_T)))\nestsv_g_n_T <- do.call(sv_gauss, c(as.list(res_g_T$`1/n`$Optimizados), list(h = range_sv_T)))\nestsv_g_h_n_T <- do.call(sv_gauss, c(as.list(res_g_T$`h/n`$Optimizados), list(h = range_sv_T)))\n\n# Modelo esférico\n\nsigma_0_esT <- 10.00   \nphi_0_esT <- 157832.8\nnugget_0_esT <- 2.07\n\npar_esT <- c(sigma_0_esT, phi_0_esT, nugget_0_esT)\n\nres_es_T <- est_sev_WLS(par=par_esT, kappa = NA,\n                       model=\"spherical\",\n                       h=variog_T$h,\n                       gamma = variog_T$gamma_hat,\n                       n = variog_T$n)\n\nMLE_esT <- optim(fn = loglik,\n             par = par_esT,\n             kappa=NA,\n             z = datosT$Residuos, \n             dist_matrix=dist_matrix_T,\n             model = \"spherical\",\n             method = \"L-BFGS-B\",\n             lower = c(0, 0, 0))\n\n\nestsv_es_Bess_T <- do.call(sv_spherical, c(as.list(res_es_T$Bessel$Optimizados), list(h = range_sv_T)))\nestsv_es_n_T <- do.call(sv_spherical, c(as.list(res_es_T$`1/n`$Optimizados), list(h = range_sv_T)))\nestsv_es_h_n_T <- do.call(sv_spherical, c(as.list(res_es_T$`h/n`$Optimizados), list(h = range_sv_T)))\nestsv_es_MLE_T <- do.call(sv_spherical, c(list(nugget = MLE_esT$par[3], phi = MLE_esT$par[2] , sigma = MLE_esT$par[1],h = range_sv_T)))\n\n```\n\n:::::: panel-tabset\n##### Exponencial\n\n::: panel-tabset\n###### Optim\n\n```{r}\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (optim)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(range_sv_T, estsv_exp_Bess_T, col=\"#FF4040\", lwd=1.5)\nlines(range_sv_T, estsv_exp_n_T, col=\"#4169E1\", lwd=1.5)\nlines(range_sv_T, estsv_exp_h_n_T, col=\"#008B00\", lwd=1.5)\nlines(range_sv_T, estsv_exp_MLE_T, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"Cressie\", \"1/n\", \"n/h\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\nresumen_exp_T <- cbind(\n  c(\"Cressie\", \"1/n\", \"n/h\", \"MLE\"),\n  rbind(\n    t(res_e_T$Bessel$Optimizados),\n    t(res_e_T$`1/n`$Optimizados),\n    t(res_e_T$`h/n`$Optimizados),\n    MLE_eT$par[c(3,1,2)]\n  ),\n  MSE = c(\n    MSE_sv(variog_T$gamma_hat, res_e_T$Bessel$Optimizados, NA, model = \"exponencial\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, res_e_T$`1/n`$Optimizados, NA, model = \"exponencial\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, res_e_T$`h/n`$Optimizados, NA, model = \"exponencial\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, list(nugget = MLE_eT$par[3], phi = MLE_eT$par[2] , sigma = MLE_eT$par[1]), NA, model = \"exponencial\", variog_T$h)\n  )\n)\n\nresumen_exp_T <- as.data.frame(resumen_exp_T)\nresumen_exp_T[ , -1] <- lapply(resumen_exp_T[ , -1], function(x) round(as.numeric(x), 3))\n\nkable(resumen_exp_T, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F, row.names = F)\n```\n\n###### GeoR\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\nini1_exp_T <- c(sigma_0_eT, phi_0_eT)\nfitvar1_exp_T <- variofit(vg1_T,\n                    cov.model = \"exponential\",\n                    ini1_exp_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_eT,\n                    wei = \"equal\")\n\nfitvar2_exp_T <- variofit(vg1_T,\n                    cov.model = \"exponential\",\n                    ini1_exp_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_eT,\n                    wei = \"npairs\")\n\nfitvar3_exp_T <- variofit(vg1_T,\n                    cov.model = \"exponential\",\n                    ini1_exp_T,\n                    fix.nugget =F,\n                    nugget = nugget_0_eT,\n                    wei = \"cressie\")\n\nfitvar4_exp_T <- likfit(temp,\n                  coords = temp$coords,\n                  data = temp$data,\n                  trend = ~ poly(Norte, 2, raw = FALSE),\n                  ini.cov.pars = ini1_exp_T,\n                  fix.nugget = F,\n                  nugget = nugget_0_eT,\n                  cov.model = \"exponential\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_exp_T, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_exp_T, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_exp_T, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_exp_T, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\n```\n\n```{r}\n\npar1Texp <- c(fitvar1_exp_T$nugget, fitvar1_exp_T$cov.pars[1], fitvar1_exp_T$cov.pars[2])\npar2Texp <- c(fitvar2_exp_T$nugget, fitvar2_exp_T$cov.pars[1], fitvar2_exp_T$cov.pars[2])\npar3Texp <- c(fitvar3_exp_T$nugget, fitvar3_exp_T$cov.pars[1], fitvar3_exp_T$cov.pars[2])\npar4Texp <- c(fitvar4_exp_T$nugget, fitvar4_exp_T$cov.pars[1], fitvar4_exp_T$cov.pars[2])\n\nresumen_exp_T2 <- cbind(\n  c(\"MCO\", \"1/n\", \"Cressie\",\"MLE\"),\n  rbind(\n    par1Texp,\n    par2Texp,\n    par3Texp,\n    par4Texp\n  ),\n  MSE = c(\n    MSE_sv(variog_T$gamma_hat, par1Texp, NA, model = \"exponencial\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par2Texp, NA, model = \"exponencial\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par3Texp, NA, model = \"exponencial\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par4Texp, NA, model = \"exponencial\", variog_T$h)\n  )\n)\n\nresumen_exp_T2 <- as.data.frame(resumen_exp_T2)\nresumen_exp_T2[ , -1] <- lapply(resumen_exp_T2[ , -1], function(x) round(as.numeric(x), 3))\nkable(resumen_exp_T2, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F, row.names = F)\n\n```\n:::\n\n##### Gaussiano\n\n::: panel-tabset\n###### Optim\n\n```{r}\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (optim)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(range_sv_T, estsv_g_Bess_T, col=\"#FF4040\", lwd=1.5)\nlines(range_sv_T, estsv_g_n_T, col=\"#4169E1\", lwd=1.5)\nlines(range_sv_T, estsv_g_h_n_T, col=\"#008B00\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"Cressie\", \"1/n\", \"n/h\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\"),\n       cex=1,\n       seg.len = .5)\n\nresumen_g_T <- cbind(\n  c(\"Cressie\", \"1/n\", \"n/h\"),\n  rbind(\n    t(res_g_T$Bessel$Optimizados),\n    t(res_g_T$`1/n`$Optimizados),\n    t(res_g_T$`h/n`$Optimizados)\n  ),\n  MSE = c(\n    MSE_sv(variog_T$gamma_hat, res_g_T$Bessel$Optimizados, NA, model = \"gaussian\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, res_g_T$`1/n`$Optimizados, NA, model = \"gaussian\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, res_g_T$`h/n`$Optimizados, NA, model = \"gaussian\", variog_T$h)\n  )\n)\n\nresumen_g_T <- as.data.frame(resumen_g_T)\nresumen_g_T[ , -1] <- lapply(resumen_g_T[ , -1], function(x) round(as.numeric(x), 3))\n\nkable(resumen_g_T, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F)\n\n```\n\n###### GeoR\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n#| \nini1_g_T <- c(sigma_0_gT, phi_0_gT)\nfitvar1_g_T <- variofit(vg1_T,\n                    cov.model = \"gaussian\",\n                    ini1_g_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_gT,\n                    wei = \"equal\")\n\nfitvar2_g_T <- variofit(vg1_T,\n                    cov.model = \"gaussian\",\n                    ini1_g_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_gT,\n                    wei = \"npairs\")\n\nfitvar3_g_T <- variofit(vg1_T,\n                    cov.model = \"gaussian\",\n                    ini1_g_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_gT,\n                    wei = \"cressie\")\n\nfitvar4_g_T <- likfit(temp,\n                  coords = temp$coords,\n                  data = temp$data,\n                  trend = ~ poly(Norte, 2, raw = FALSE),\n                  ini.cov.pars = ini1_g_T,\n                  fix.nugget = F,\n                  nugget = nugget_0_gT,\n                  cov.model = \"gaussian\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_g_T, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_g_T, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_g_T, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_g_T, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n```\n\n```{r}\npar1Tg <- c(fitvar1_g_T$nugget, fitvar1_g_T$cov.pars[1], fitvar1_g_T$cov.pars[2])\npar2Tg <- c(fitvar2_g_T$nugget, fitvar2_g_T$cov.pars[1], fitvar2_g_T$cov.pars[2])\npar3Tg <- c(fitvar3_g_T$nugget, fitvar3_g_T$cov.pars[1], fitvar3_g_T$cov.pars[2])\npar4Tg <- c(fitvar4_g_T$nugget, fitvar4_g_T$cov.pars[1], fitvar4_g_T$cov.pars[2])\n\nresumen_g_T2 <- cbind(\n  c(\"MCO\", \"1/n\", \"Cressie\",\"MLE\"),\n  rbind(\n    par1Tg,\n    par2Tg,\n    par3Tg,\n    par4Tg\n  ),\n  MSE = c(\n    MSE_sv(variog_T$gamma_hat, par1Tg, NA, model = \"gaussian\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par2Tg, NA, model = \"gaussian\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par3Tg, NA, model = \"gaussian\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par4Tg, NA, model = \"gaussian\", variog_T$h)\n  )\n)\n\nresumen_g_T2 <- as.data.frame(resumen_g_T2)\nresumen_g_T2[ , -1] <- lapply(resumen_g_T2[ , -1], function(x) round(as.numeric(x), 3))\n\nkable(resumen_g_T2, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F, row.names = F)\n```\n:::\n\n##### Esférico\n\n::: panel-tabset\n###### Optim\n\n```{r}\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (optim)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(range_sv_T, estsv_es_Bess_T, col=\"#FF4040\", lwd=1.5)\nlines(range_sv_T, estsv_es_n_T, col=\"#4169E1\", lwd=1.5)\nlines(range_sv_T, estsv_es_h_n_T, col=\"#008B00\", lwd=1.5)\nlines(range_sv_T, estsv_es_MLE_T, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"Cressie\", \"1/n\", \"n/h\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\nresumen_es_T <- cbind(\n  c(\"Cressie\", \"1/n\", \"n/h\",\"MLE\"),\n  rbind(\n    t(res_es_T$Bessel$Optimizados),\n    t(res_es_T$`1/n`$Optimizados),\n    t(res_es_T$`h/n`$Optimizados),\n    MLE_esT$par[c(3,1,2)]\n  ),\n  MSE = c(\n    MSE_sv(variog_T$gamma_hat, res_es_T$Bessel$Optimizados, NA, model = \"spherical\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, res_es_T$`1/n`$Optimizados, NA, model = \"spherical\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, res_es_T$`h/n`$Optimizados, NA, model = \"spherical\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, list(nugget = MLE_esT$par[3], phi = MLE_esT$par[2] , sigma = MLE_esT$par[1]), NA, model = \"spherical\", variog_T$h)\n  )\n)\n\nresumen_es_T <- as.data.frame(resumen_es_T)\nresumen_es_T[ , -1] <- lapply(resumen_es_T[ , -1], function(x) round(as.numeric(x), 3))\n\nkable(resumen_es_T, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F)\n```\n\n###### GeoR\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n#| \nini1_es_T <- c(sigma_0_esT, phi_0_esT)\nfitvar1_es_T <- variofit(vg1_T,\n                    cov.model = \"spherical\",\n                    ini1_es_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_esT,\n                    wei = \"equal\")\n\nfitvar2_es_T <- variofit(vg1_T,\n                    cov.model = \"spherical\",\n                    ini1_es_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_esT,\n                    wei = \"npairs\")\n\nfitvar3_es_T <- variofit(vg1_T,\n                    cov.model = \"spherical\",\n                    ini1_es_T,\n                    fix.nugget = F,\n                    nugget = nugget_0_esT,\n                    wei = \"cressie\")\n\nfitvar4_es_T <- likfit(temp,\n                  coords = temp$coords,\n                  data = temp$data,\n                  trend = ~ poly(Norte, 2, raw = FALSE),\n                  ini.cov.pars = ini1_es_T,\n                  fix.nugget = F,\n                  nugget = nugget_0_esT,\n                  cov.model = \"spherical\",\n                  lik.method = \"ML\")\n\n\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_es_T, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_es_T, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_es_T, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_es_T, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\n\n\n```\n\n```{r}\n\npar1Tes <- c(fitvar1_es_T$nugget, fitvar1_es_T$cov.pars[1], fitvar1_es_T$cov.pars[2])\npar2Tes <- c(fitvar2_es_T$nugget, fitvar2_es_T$cov.pars[1], fitvar2_es_T$cov.pars[2])\npar3Tes <- c(fitvar3_es_T$nugget, fitvar3_es_T$cov.pars[1], fitvar3_es_T$cov.pars[2])\npar4Tes <- c(fitvar4_es_T$nugget, fitvar4_es_T$cov.pars[1], fitvar4_es_T$cov.pars[2])\n\nresumen_es_T2 <- cbind(\n  c(\"MCO\", \"1/n\", \"Cressie\",\"MLE\"),\n  rbind(\n    par1Tes,\n    par2Tes,\n    par3Tes,\n    par4Tes\n  ),\n  MSE = c(\n    MSE_sv(variog_T$gamma_hat, par1Tes, NA, model = \"spherical\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par2Tes, NA, model = \"spherical\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par3Tes, NA, model = \"spherical\", variog_T$h),\n    MSE_sv(variog_T$gamma_hat, par4Tes, NA, model = \"spherical\", variog_T$h)\n  )\n)\n\nresumen_es_T2 <- as.data.frame(resumen_es_T2)\nresumen_es_T2[ , -1] <- lapply(resumen_es_T2[ , -1], function(x) round(as.numeric(x), 3))\n\nkable(resumen_es_T2, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F, row.names = F)\n\n```\n:::\n::::::\n\nEl modelo con menor MSE es el modelo Gausiano. Sin embargo, dada la inestabilidad numérica que se observa al realizar la predicción se opta por usar el modelo esférico obtenido por mínimos cuadrados ponderados usando la ponderación $h/n$, que es el segundo mejor en términos del MSE.\n\n#### Kriging\n\nUsando el modelo esférico:\n\n```{r}\nplot(vg1_T,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Modelo esférico para Temperatura\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(range_sv_T, estsv_es_h_n_T, col=\"#008B00\", lwd=1.5)\n\n```\n\n\n```{r, message=F, warning=F, results='hide'}\n\n#Se escoge el mejor modelo --------------------------------\n\nbest_model_T <- gstat::vgm(psill = res_es_T$`h/n`$Optimizados[2],\n                           model = \"Sph\",\n                           range = res_es_T$`h/n`$Optimizados[3],\n                           nugget = res_es_T$`h/n`$Optimizados[1]\n)\n\n#Se crea un objeto en gstat -------------------------------\n\ncoordinates(datosT) <- ~Este + Norte\nproj4string(datosT) <- CRS(\"EPSG:3310\")\n\ng_obj<-gstat::gstat(id=\"Temperatura\",\n             formula = Temperatura ~ Norte + I(Norte^2),\n             model = best_model_T,\n             data = datosT)\n\n#Kriging -------------------------------------------------\n\nsuppressMessages(predic <- predict(g_obj, newdata = new, nmin = 20))\n\n#Mapas de predicción --------------------------------------\n\ngridded(predic) <- TRUE\n\n#1. Mapa de Kriging ---------------------------------------\n\npredic_raster_utm <- raster(predic, layer = \"Temperatura.pred\")\n\ncrs(predic_raster_utm) <- \"+init=epsg:3310\"\n\npredic_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        predic_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmin_pred <- raster::cellStats(predic_raster_wgs84, stat='min')\nmax_pred <- raster::cellStats(predic_raster_wgs84, stat='max')\n\npred_range <- c(minValue(predic_raster_wgs84), maxValue(predic_raster_wgs84))\n\nstep_pred <- (max_pred-min_pred)/ 6\n\nbins <- round(seq(min_pred, max_pred, by=step_pred),0)\n\npal_pred <- colorBin(\n  palette = \"viridis\", # La paleta de colores\n  domain = pred_range,\n  bins = bins,\n  na.color = \"transparent\"\n)\n\nmapa_kriging_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    predic_raster_wgs84,\n    colors = pal_pred, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n    addCircleMarkers(data = datosT_sf_wgs84,\n                   fillColor = ~pal(Temperatura),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"Temp:\", Temperatura, \"°C\")) %>% \n  addLegend(\n    pal = pal_pred, \n    values = pred_range,\n    title = \"Predicción T (°C)\",\n    position = \"topright\"\n  ) %>%\n  addLegend(pal = pal,\n            values = datosT_sf_wgs84$Temperatura,\n            title = \"Temperatura Observada\",\n    position = \"topleft\"\n  ) \n\n#2 Mapa Varianza------------------------------------------\n\nvar_raster_utm <- raster(predic, layer = \"Temperatura.var\")\n\ncrs(var_raster_utm) <- \"+init=epsg:3310\"\n\nvar_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        var_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmax_var <- raster::cellStats(var_raster_wgs84, stat='max')\nstep_var <- max_var / 6\n\nbinsv <- round(seq(0, max_var, by=step_var),2)\n\nvar_range <- c(minValue(var_raster_wgs84), maxValue(var_raster_wgs84))\npal_var <- colorBin(\n  palette = \"Spectral\", # La paleta de colores\n  domain = var_range,\n  bins = binsv,\n  na.color = \"transparent\"\n)\n\nmapa_var_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    var_raster_wgs84, \n    colors = pal_var, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  addLegend(\n    pal = pal_var, \n    values = var_range,\n    title = \"Varianza\",\n    position = \"topright\"\n  ) \n\n#3. Mapa Cv ----------------------------------------------\n\ncv_raster_utm <- sqrt(var_raster_utm) / abs(predic_raster_utm)\n\nmapa_mayor_a_uno <- cv_raster_utm > 1\ncv_raster_utm[mapa_mayor_a_uno] <- 1\n\ncrs(cv_raster_utm) <- \"+init=epsg:3310\"\n\ncv_terra <- terra::rast(cv_raster_utm)\n\nmasked_cv_terra <- terra::mask(cv_terra, sh_terra)\n\ncv_raster_wgs84_terra <- terra::project(\n    masked_cv_terra, \n    y = \"epsg:4326\", \n    method = \"bilinear\" # Similar a projectRaster\n)\n\ncv_raster_wgs84 <- raster::raster(cv_raster_wgs84_terra)\n\nmax_cv <- raster::cellStats(cv_raster_wgs84, stat='max')\nstep_cv <- max_cv / 10\n\nbincv <- seq(0,max_cv, by=step_cv)\n\ncv_range <- c(minValue(cv_raster_wgs84), maxValue(cv_raster_wgs84))\n\npal_cv <- colorBin(\n  palette = \"RdYlGn\", # Rojo-Amarillo-Verde\n  domain = cv_range,\n  na.color = \"transparent\",\n  bins = bincv,\n  reverse = TRUE \n)\n\nmapa_cv_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    cv_raster_wgs84, \n    colors = pal_cv, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  \n  addLegend(\n    pal = pal_cv, \n    values = cv_range,\n    title = \"Coeficiente de Variación\",\n    position = \"topright\"\n  )\n\n```\n\n::: panel-tabset\n##### Predicción\n\n```{r}\nmapa_kriging_leaflet\n```\n\n##### Varianza\n\n```{r}\nmapa_var_leaflet\n```\n\n##### Coeficiente de variación\n\n```{r}\nmapa_cv_leaflet\n```\n\n:::\n\n### Variable Velocidad del viento\n\n```{r, message=F, warning=F}\n\ny_WS <- WS[1,] #Tomar una fecha\ny_WS <- cbind(colnames(y_WS),t(y_WS[1,]))\ny_WS <- y_WS[-1,]\ny_WS <- as.data.frame(y_WS)\ny_WS <- na.omit(y_WS)\ny_WS$V1 <- as.numeric(y_WS$V1)\ny_WS <- inner_join(y_WS, EstacionesWS, by=c(\"V1\"=\"AQSID\"))\ndatosWS <- y_WS[,c(13,14,2)]\ncolnames(datosWS)=c(\"Este\",\"Norte\",\"WindSpeed\")\ndatosWS$WindSpeed <- as.numeric(datosWS$WindSpeed)\n\ndatosWS_sf <- st_as_sf(datosWS, coords = c(\"Este\", \"Norte\"), crs = 3310)\n\ndatosWS_sf_wgs84 <- st_transform(datosWS_sf, crs = 4326)\n\npalWS <- colorNumeric(palette = \"viridis\", domain = datosWS_sf_wgs84$WindSpeed)\n\nleaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addPolygons(data = sh_mundos_wgs84, fill = FALSE, color = \"black\", weight = 2) %>%\n  addCircleMarkers(data = datosWS_sf_wgs84,\n                   fillColor = ~palWS(WindSpeed),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"WindSpeed:\", WindSpeed, \"m/s\")) %>%\n  addLegend(pal = palWS, values = datosWS_sf_wgs84$WindSpeed, title = \"WindSpeed (m/s)\")\n\n\nws <- as.geodata(datosWS)\npander::pander(summary(ws))\n```\n\n::: panel-tabset\n#### Gráficos de dispersión\n\n```{r}\npWS1 <- simple_scatter_plot(datosWS, \"Este\", \"WindSpeed\")\npWS2 <- simple_scatter_plot(datosWS, \"Norte\", \"WindSpeed\")\n\ncowplot::plot_grid(pWS1,pWS2)\n\n```\n\n#### GeoR\n\n```{r}\nplot(ws, qt.col = c(\"purple\",\n                          \"pink\",\n                          \"green\",\n                          \"yellow\"),\n     scatter3d=T)\n```\n:::\n\n#### Modelo para la Media\n\nEl modelo que mejor atrapa el efecto de la media es:\n\n$$WindSpeed = \\beta_0 + \\beta_1 \\times Este + \\beta_2 \\times Norte + \\beta_3 \\times Este \\times Norte$$\n\n```{r}\nfitWS <- lm(WindSpeed~Este*Norte, data = datosWS) \npander::pander(summary(fitWS))\n\n```\n\nGráficamente se observa una mitigación en la tendencia espacial:\n\n::: panel-tabset\n##### Gráficos de dispersión\n\n```{r}\ndatosWS$Residuos <- fitWS$residuals\n\npWS1 <- simple_scatter_plot(datosWS, \"Este\", \"Residuos\")\npWS2 <- simple_scatter_plot(datosWS, \"Norte\", \"Residuos\")\n\ncowplot::plot_grid(pWS1,pWS2)\n\n```\n\n##### GeoR\n\n```{r}\nplot(temp, qt.col = c(\"purple\",\n                      \"pink\",\n                      \"green\",\n                      \"yellow\"),\n     scatter3d=T, trend=~Norte*Este)\n```\n:::\n\n#### Estimación Empírica del Semivariograma\n\n```{r, message=FALSE, results='hide'}\nvgO_WS <- variog(ws,estimator.type = \"modulus\", pairs.min=50) \n\nvg1_WS <- variog(ws, trend = ~Norte*Este,\n                estimator.type = \"modulus\", pairs.min=50)\n```\n\n::: panel-tabset\n##### Con tendencia\n\n```{r}\nplot(vgO_WS,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Sin remover tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n\n##### Removiendo Tendencia\n\n```{r}\nplot(vg1_WS,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Removiendo tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n:::\n\n##### Asintropía\n\n```{r, message=FALSE, warning=FALSE,results='hide'}\npar(mfrow = c(2, 2),\n    mar = c(3, 3, 1, 1),\n    mgp = c(2, 1, 0))\n\nvg1_WS_0 <- variog(ws, trend = ~Norte*Este,\n                estimator.type = \"modulus\", pairs.min=50,\n                direction = 0)\nvg1_WS_45 <- variog(ws, trend = ~Norte*Este,\n                estimator.type = \"modulus\", pairs.min = 20,\n                direction = pi / 4)\nvg1_WS_90 <- variog(ws, trend = ~Norte*Este,\n                estimator.type = \"modulus\", pairs.min=50,\n                direction = pi / 2)\nvg1_WS_135 <- variog(ws, trend = ~Norte*Este,\n                estimator.type = \"modulus\", pairs.min=50,\n                direction = 3 * pi / 4)\n\nplot(vg1_WS_0,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     main = \"0°\",\n     col.main = 4)\nplot(vg1_WS_45,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     main = \"45°\",\n     col.main = 4)\nplot(vg1_WS_90,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     main = \"90°\",\n     col.main = 4)\nplot(vg1_WS_135,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     main = \"135°\",\n     col.main = 4)\n\n```\n\n\n#### Estimación del Modelo Teórico de Semivariograma\n\n```{r}\n#| message: false\n#| warning: false\n#| results: 'hide'\n\nvariog_WS <- data.frame(h = vg1_WS$u, gamma_hat = vg1_WS$v,\n                       n = vg1_WS$n)\n\nrange_sv_WS <- seq(1,max(variog_WS$h), by=1000)\n\n#Modelo Coseno---------------------------------------------\n\nsigma_0_cosWS <- 1.5\nphi_0_cosWS <- .6e5\nnugget_0_cosWS <- 1.5\n\n#MCO -------\nI_pond_WS <- nls(formula = gamma_hat ~cos_sv(nugget, sigma, h, phi),\n              start = c(nugget = nugget_0_cosWS, sigma = sigma_0_cosWS, phi = phi_0_cosWS),\n              lower = rep(1e-6,3),\n              data = variog_WS,\n              control = nls.control(maxiter = 500, warnOnly = TRUE))\n\noptim_I_WS <- optim(\n  par = coef(I_pond_WS),\n  fn = MSE_ponderados,\n  h = variog_WS$h,\n  gamma = variog_WS$gamma_hat,\n  pesos = \"I\",\n  model = \"cos\",\n  n = n,\n  method = \"L-BFGS-B\",\n  lower = rep(1e-6,3)\n)\n\npar_optim_I_WS <- optim_I_WS$par[c(\"nugget\", \"sigma\", \"phi\")]\n\nestsv_cos_I_WS <- do.call(cos_sv, c(as.list(par_optim_I_WS), list(h = range_sv_WS)))\n\n\n#WLS -------\n\npar_cosWS <- c(sigma_0_cosWS, phi_0_cosWS, nugget_0_cosWS)\n\nres_cos_WS <- est_sev_WLS(par=par_cosWS, kappa = NA,\n                       model=\"cos\",\n                       h=variog_WS$h,\n                       gamma = variog_WS$gamma_hat,\n                       n = variog_WS$n)\n\nestsv_cos_Bess_WS <- do.call(cos_sv, c(as.list(res_cos_WS$Bessel$Optimizados), list(h = range_sv_WS)))\nestsv_cos_n_WS <- do.call(cos_sv, c(as.list(res_cos_WS$`1/n`$Optimizados), list(h = range_sv_WS)))\nestsv_cos_h_n_WS <- do.call(cos_sv, c(as.list(res_cos_WS$`h/n`$Optimizados), list(h = range_sv_WS)))\n\n#Modelo Wave ---------------------------------------------\n\nnugget_0_wvWS <- 1.5\n\npar_wvWS <- c(3.5,.6e5)\n\nfitvar1_cos_WS <- variofit(vg1_WS,\n                    cov.model = \"wave\",\n                    par_wvWS,\n                    fix.nugget = F,\n                    nugget = nugget_0_wvWS,\n                    wei = \"equal\")\nfitvar2_cos_WS <- variofit(vg1_WS,\n                    cov.model = \"wave\",\n                    par_wvWS,\n                    fix.nugget = F,\n                    nugget = nugget_0_wvWS,\n                    wei = \"npairs\")\n\nfitvar3_cos_WS <- variofit(vg1_WS,\n                    cov.model = \"wave\",\n                    par_wvWS,\n                    fix.nugget = F,\n                    nugget = nugget_0_wvWS,\n                    wei = \"cressie\")\n\nfitvar4_cos_WS <- likfit(ws,\n                       coords = ws$coords,\n                       data = ws$data,\n                       trend = ~ Este*Norte,\n                       ini.cov.pars = par_wvWS,\n                       fix.nugget = F,\n                       nugget = nugget_0_wvWS,\n                       cov.model = \"wave\",\n                       lik.method = \"ML\")\n```\n\n::: panel-tabset\n\n###### Coseno (Optim)\n\n```{r}\nplot(vg1_WS,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (optim)\",\n     col.main = 4, cex.main =1.3)\nlines(range_sv_WS, estsv_cos_Bess_WS, col=\"#FF4040\", lwd=1.5)\nlines(range_sv_WS, estsv_cos_n_WS, col=\"#4169E1\", lwd=1.5)\nlines(range_sv_WS, estsv_cos_h_n_WS, col=\"#008B00\", lwd=1.5)\nlines(range_sv_WS, estsv_cos_I_WS, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"Cressie\", \"1/n\", \"n/h\", \"MCO\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\nresumen_cos_SV <- cbind(\n  c(\"Cressie\", \"1/n\", \"n/h\", \"MCO\"),\n  rbind(\n    t(res_cos_WS$Bessel$Optimizados),\n    t(res_cos_WS$`1/n`$Optimizados),\n    t(res_cos_WS$`h/n`$Optimizados),\n    par_optim_I_WS\n  ),\n  MSE = c(\n    MSE_sv(variog_WS$gamma_hat, res_cos_WS$Bessel$Optimizados, NA, model = \"cos\", variog_WS$h),\n    MSE_sv(variog_WS$gamma_hat, res_cos_WS$`1/n`$Optimizados, NA, model = \"cos\", variog_WS$h),\n    MSE_sv(variog_WS$gamma_hat, res_cos_WS$`h/n`$Optimizados, NA, model = \"cos\", variog_WS$h),\n    MSE_sv(variog_WS$gamma_hat, par_optim_I_WS, NA, model = \"cos\", variog_WS$h)\n  )\n)\n\nresumen_cos_SV <- as.data.frame(resumen_cos_SV)\nresumen_cos_SV[ , -1] <- lapply(resumen_cos_SV[ , -1], function(x) round(as.numeric(x), 3))\n\nkable(resumen_cos_SV, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F, row.names = F)\n```\n\n###### Wave (GeoR)\n\n```{r, message=FALSE, warning=FALSE}\n\nplot(vg1_WS,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = 4, cex.main =1.3)\n\nlines(fitvar1_cos_WS, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_cos_WS, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_cos_WS, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_cos_WS, col=\"#FFA500\", lwd=1.5)\n\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\n```\n\n```{r}\npar1WScos <- c(fitvar1_cos_WS$nugget, fitvar1_cos_WS$cov.pars[1], fitvar1_cos_WS$cov.pars[2])\npar2WScos <- c(fitvar2_cos_WS$nugget, fitvar2_cos_WS$cov.pars[1], fitvar2_cos_WS$cov.pars[2])\npar3WScos <- c(fitvar3_cos_WS$nugget, fitvar3_cos_WS$cov.pars[1], fitvar3_cos_WS$cov.pars[2])\npar4WScos <- c(fitvar4_cos_WS$nugget, fitvar4_cos_WS$cov.pars[1], fitvar4_cos_WS$cov.pars[2])\n\nresumen_wv_WS <- cbind(\n  c(\"MCO\", \"1/n\", \"Cressie\",\"MLE\"),\n  rbind(\n    par1WScos,\n    par2WScos,\n    par3WScos,\n    par4WScos\n  ),\n  MSE = c(\n    MSE_sv(variog_WS$gamma_hat, par1WScos, NA, model = \"wave\", variog_WS$h),\n    MSE_sv(variog_WS$gamma_hat, par2WScos, NA, model = \"wave\", variog_WS$h),\n    MSE_sv(variog_WS$gamma_hat, par3WScos, NA, model = \"wave\", variog_WS$h),\n    MSE_sv(variog_WS$gamma_hat, par4WScos, NA, model = \"wave\", variog_WS$h)\n  )\n)\n\nresumen_wv_WS <- as.data.frame(resumen_wv_WS)\nresumen_wv_WS[ , -1] <- lapply(resumen_wv_WS[ , -1], function(x) round(as.numeric(x), 3))\n\nkable(resumen_wv_WS, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F, row.names = F)\n\n```\n\n:::\n\n#### Kriging\n\nUsando el modelo wave:\n\n```{r}\nplot(vg1_WS,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Modelo wave para WindSpeed\",\n     col.main = 4, cex.main =1.3)\nlines(fitvar2_cos_WS, col=\"#4169E1\", lwd=1.5)\n```\n\n\n```{r, message=F, warning=F, results='hide'}\n\n#Se escoge el mejor modelo --------------------------------\n\nbest_model_WS <- gstat::vgm(psill = par2WScos[2],\n                           model = \"Wav\",\n                           range = par2WScos[3],\n                           nugget = par2WScos[1]\n)\n\n#Se crea un objeto en gstat -------------------------------\n\ncoordinates(datosWS) <- ~Este + Norte\nproj4string(datosWS) <- CRS(\"EPSG:3310\")\n\ng_obj<-gstat::gstat(id=\"WindSpeed\",\n             formula = WindSpeed ~ Norte*Este,\n             model = best_model_WS,\n             data = datosWS)\n\n#Kriging -------------------------------------------------\n\nsuppressMessages(predic <- predict(g_obj, newdata = new, nmin = 20))\n\n#Mapas de predicción --------------------------------------\n\ngridded(predic) <- TRUE\n\n#1. Mapa de Kriging ---------------------------------------\n\npredic_raster_utm <- raster(predic, layer = \"WindSpeed.pred\")\n\ncrs(predic_raster_utm) <- \"+init=epsg:3310\"\n\npredic_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        predic_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmin_pred <- raster::cellStats(predic_raster_wgs84, stat='min')\nmax_pred <- raster::cellStats(predic_raster_wgs84, stat='max')\n\npred_range <- c(minValue(predic_raster_wgs84), maxValue(predic_raster_wgs84))\n\nstep_pred <- (max_pred-min_pred)/ 6\n\nbins <- round(seq(min_pred, max_pred, by=step_pred),0)\n\npal_pred <- colorBin(\n  palette = \"viridis\", # La paleta de colores\n  domain = pred_range,\n  bins = bins,\n  na.color = \"transparent\"\n)\n\nmapa_kriging_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    predic_raster_wgs84,\n    colors = pal_pred, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n    addCircleMarkers(data = datosWS_sf_wgs84,\n                   fillColor = ~palWS(WindSpeed),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"WS:\", WindSpeed, \"m/s\")) %>% \n  addLegend(\n    pal = pal_pred, \n    values = pred_range,\n    title = \"Predicción WS (m/s)\",\n    position = \"topright\"\n  ) %>%\n  addLegend(pal = palWS,\n            values = datosWS_sf_wgs84$WindSpeed,\n            title = \"WS Observada\",\n    position = \"topleft\"\n  ) \n\n#2 Mapa Varianza------------------------------------------\n\nvar_raster_utm <- raster(predic, layer = \"WindSpeed.var\")\n\ncrs(var_raster_utm) <- \"+init=epsg:3310\"\n\nvar_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        var_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmax_var <- raster::cellStats(var_raster_wgs84, stat='max')\nstep_var <- max_var / 6\n\nbinsv <- round(seq(0, max_var, by=step_var),2)\n\nvar_range <- c(minValue(var_raster_wgs84), maxValue(var_raster_wgs84))\npal_var <- colorBin(\n  palette = \"Spectral\", # La paleta de colores\n  domain = var_range,\n  bins = binsv,\n  na.color = \"transparent\"\n)\n\nmapa_var_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    var_raster_wgs84, \n    colors = pal_var, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  addLegend(\n    pal = pal_var, \n    values = var_range,\n    title = \"Varianza\",\n    position = \"topright\"\n  ) \n\n#3. Mapa Cv ----------------------------------------------\n\npredic$cv <- sqrt(predic$WindSpeed.var) / pmax(abs(predic$WindSpeed.pred), 1e-6)\n\npredic$cv[predic$cv > 1] <- 1\n\ncv_raster_utm <- raster(predic, layer = \"cv\")\n\ncrs(cv_raster_utm) <- \"+init=epsg:3310\"\n\ncv_terra <- terra::rast(cv_raster_utm)\n\nmasked_cv_terra <- terra::mask(cv_terra, sh_terra)\n\ncv_raster_wgs84_terra <- terra::project(\n    masked_cv_terra, \n    y = \"epsg:4326\", \n    method = \"bilinear\" # Similar a projectRaster\n)\n\ncv_raster_wgs84 <- raster::raster(cv_raster_wgs84_terra)\n\nmax_cv <- raster::cellStats(cv_raster_wgs84, stat='max')\nstep_cv <- max_cv / 10\n\nbincv <- seq(0,max_cv, by=step_cv)\n\ncv_range <- c(minValue(cv_raster_wgs84), maxValue(cv_raster_wgs84))\n\n\npal_cv <- colorBin(\n  palette = \"RdYlGn\", # Rojo-Amarillo-Verde\n  domain = cv_range,\n  na.color = \"transparent\",\n  bins = bincv,\n  reverse = TRUE \n)\n\nmapa_cv_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    cv_raster_wgs84, \n    colors = pal_cv, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  \n  addLegend(\n    pal = pal_cv, \n    values = cv_range,\n    title = \"Coeficiente de Variación\",\n    position = \"topright\"\n  )\n\n```\n\n::: panel-tabset\n##### Predicción\n\n```{r}\nmapa_kriging_leaflet\n```\n\n##### Varianza\n\n```{r}\nmapa_var_leaflet\n```\n\n##### Coeficiente de variación\n\n```{r}\nmapa_cv_leaflet\n```\n\n:::\n\n### Variable presión atmosférica\n\n```{r, message=F, warning=F}\n\ny_Pr <- Presion[1,] #Tomar una fecha\ny_Pr <- cbind(colnames(y_Pr),t(y_Pr[1,]))\ny_Pr <- y_Pr[-1,]\ny_Pr <- as.data.frame(y_Pr)\ny_Pr <- na.omit(y_Pr)\ny_Pr$V1 <- as.numeric(y_Pr$V1)\ny_Pr <- y_Pr[-which.min(y_Pr$V2),]\ny_Pr <- y_Pr[-which.min(y_Pr$V2),]\ny_Pr <- inner_join(y_Pr, EstacionesPr, by=c(\"V1\"=\"AQSID\"))\ndatosPr <- y_Pr[,c(13,14,2)]\ncolnames(datosPr)=c(\"Este\",\"Norte\",\"Presion\")\ndatosPr$Presion <- as.numeric(datosPr$Presion)\n\ndatosPr_sf <- st_as_sf(datosPr, coords = c(\"Este\", \"Norte\"), crs = 3310)\n\ndatosPr_sf_wgs84 <- st_transform(datosPr_sf, crs = 4326)\n\npalPr <- colorNumeric(palette = \"viridis\", domain = datosPr_sf_wgs84$Presion)\n\nleaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addPolygons(data = sh_mundos_wgs84, fill = FALSE, color = \"black\", weight = 2) %>%\n  addCircleMarkers(data = datosPr_sf_wgs84,\n                   fillColor = ~palPr(Presion),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"Presion:\", Presion, \"mb\")) %>%\n  addLegend(pal = palPr, values = datosPr_sf_wgs84$Presion, title = \"Presión Barométrica mb\")\n\n\npresion <- as.geodata(datosPr)\npander::pander(summary(presion))\n\n```\n\n::: panel-tabset\n#### Gráficos de dispersión\n\n```{r}\npPr1 <- simple_scatter_plot(datosPr, \"Este\", \"Presion\")\npPr2 <- simple_scatter_plot(datosPr, \"Norte\", \"Presion\")\n\ncowplot::plot_grid(pPr1,pPr2)\n\n```\n\n#### GeoR\n\n```{r}\nplot(presion, qt.col = c(\"purple\",\n                          \"pink\",\n                          \"green\",\n                          \"yellow\"),\n     scatter3d=T)\n```\n:::\n\n#### Modelo para la Media\n\nEl modelo que mejor atrapa el efecto de la media es:\n\n$$Presion = \\beta_0 + \\beta_1 \\times Este + \\beta_2 \\times Norte $$\n\n```{r}\nfitPr <- lm(Presion~Este+Norte, data=datosPr)\npander::pander(summary(fitPr))\n\n```\n\nGráficamente se observa una mitigación en la tendencia espacial:\n\n::: panel-tabset\n##### Gráficos de dispersión\n\n```{r}\ndatosPr$Residuos <- fitPr$residuals\n\npPr1 <- simple_scatter_plot(datosPr, \"Este\", \"Residuos\")\npPr2 <- simple_scatter_plot(datosPr, \"Norte\", \"Residuos\")\n\ncowplot::plot_grid(pPr1,pPr2)\n\n```\n\n##### GeoR\n\n```{r}\nplot(presion, qt.col = c(\"purple\",\n                      \"pink\",\n                      \"green\",\n                      \"yellow\"),\n     scatter3d=T, trend=~Norte+Este)\n```\n:::\n\n#### Estimación Empírica del Semivariograma\n\n```{r, message=FALSE, results='hide'}\nvgO_Pr <- variog(presion,estimator.type = \"modulus\", pairs.min=50) \n\nvg1_Pr <- variog(presion, trend = ~Norte+Este,\n                estimator.type = \"modulus\", pairs.min=50)\n```\n\n::: panel-tabset\n##### Con tendencia\n\n```{r}\nplot(vgO_Pr,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Sin remover tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n\n##### Removiendo Tendencia\n\n```{r}\nplot(vg1_Pr,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Removiendo tendencia\",\n     col.main = 4, cex.main =1.3)\n```\n:::\n\n#### Estimación del Modelo Teórico de Semivariograma\n\nLos modelos obtenidos ajustanto por EyeFit, son:\n\n``` text\n\ncov.model sigmasq      phi tausq kappa kappa2 practicalRange\n1 exponential 1056.47 126360.8 132.06    NA     NA       378543.2\n```\n\n##### Exponencial\n\n```{r, message=FALSE, warning=FALSE, results='hide'}\n\nvariog_Pr <- data.frame(h = vg1_Pr$u, gamma_hat = vg1_Pr$v,\n                       n = vg1_Pr$n)\n\nnugget_0_ePr <- 132.06\n\npar_ePr <- c(1056.47,126360.8)\n\nfitvar1_exp_Pr <- variofit(vg1_Pr,\n                    cov.model = \"exponential\",\n                    par_ePr,\n                    fix.nugget = F,\n                    nugget = nugget_0_ePr,\n                    wei = \"equal\")\n\nfitvar2_exp_Pr <- variofit(vg1_Pr,\n                    cov.model = \"exponential\",\n                    par_ePr,\n                    fix.nugget = F,\n                    nugget = nugget_0_ePr,\n                    wei = \"npairs\")\n\nfitvar3_exp_Pr <- variofit(vg1_Pr,\n                    cov.model = \"exponential\",\n                    par_ePr,\n                    fix.nugget = F,\n                    nugget = nugget_0_ePr,\n                    wei = \"cressie\")\n\nfitvar4_exp_Pr <- likfit(presion,\n                       coords = presion$coords,\n                       data = presion$data,\n                       trend = ~ Este+Norte,\n                       ini.cov.pars = par_ePr,\n                       fix.nugget = F,\n                       nugget = nugget_0_ePr,\n                       cov.model = \"exponential\",\n                       lik.method = \"ML\")\n\nplot(vg1_Pr,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Estimación teórica del modelo de semivariograma \\n (GeoR, gstat)\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_exp_Pr, col=\"#FF4040\", lwd=1.5)\nlines(fitvar2_exp_Pr, col=\"#4169E1\", lwd=1.5)\nlines(fitvar3_exp_Pr, col=\"#008B00\", lwd=1.5)\nlines(fitvar4_exp_Pr, col=\"#FFA500\", lwd=1.5)\nlegend(\"topleft\",\n       c(\"MCO\", \"1/n\", \"Cressie\", \"MLE\"),#, \"REML\"),\n       lwd = 1,\n       lty = 3,\n       col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       box.col = 9,\n       text.col = c(\"#FF4040\", \"#4169E1\", \"#008B00\",\"#FFA500\"),\n       cex=1,\n       seg.len = .5)\n\n```\n\n```{r}\npar1Prexp <- c(fitvar1_exp_Pr$nugget, fitvar1_exp_Pr$cov.pars[1], fitvar1_exp_Pr$cov.pars[2])\npar2Prexp <- c(fitvar2_exp_Pr$nugget, fitvar2_exp_Pr$cov.pars[1], fitvar2_exp_Pr$cov.pars[2])\npar3Prexp <- c(fitvar3_exp_Pr$nugget, fitvar3_exp_Pr$cov.pars[1], fitvar3_exp_Pr$cov.pars[2])\npar4Prexp <- c(fitvar4_exp_Pr$nugget, fitvar4_exp_Pr$cov.pars[1], fitvar4_exp_Pr$cov.pars[2])\n\nresumen_exp_Pr <- cbind(\n  c(\"MCO\", \"1/n\", \"Cressie\",\"MLE\"),\n  rbind(\n    par1Prexp,\n    par2Prexp,\n    par3Prexp,\n    par4Prexp\n  ),\n  MSE = c(\n    MSE_sv(variog_Pr$gamma_hat, par1Prexp, NA, model = \"exponencial\", variog_Pr$h),\n    MSE_sv(variog_Pr$gamma_hat, par2Prexp, NA, model = \"exponencial\", variog_Pr$h),\n    MSE_sv(variog_Pr$gamma_hat, par3Prexp, NA, model = \"exponencial\", variog_Pr$h),\n    MSE_sv(variog_Pr$gamma_hat, par4Prexp, NA, model = \"exponencial\", variog_Pr$h)\n  )\n)\n\nresumen_exp_Pr <- as.data.frame(resumen_exp_Pr)\nresumen_exp_Pr[ , -1] <- lapply(resumen_exp_Pr[ , -1], function(x) round(as.numeric(x), 3))\nkable(resumen_exp_Pr, digits = 3,\n      col.names = c(\"Método\", \"Nugget\", \"Sigma\", \"Phi\", \"MSE\"),\n      escape = F, row.names = F)\n```\n\n#### Kriging\n\nUsando el modelo exponencial:\n\n```{r}\nplot(vg1_Pr,\n     xlab = \"h\",\n     ylab = \"Semivarianza\",\n     cex.lab = 1.3,\n     cex.axis = 1.2,\n     main = \"Modelo exponencial para Presión\",\n     col.main = \"#36648B\", cex.main =1.3)\nlines(fitvar1_exp_Pr, col=\"#FF4040\", lwd=1.5)\n\n\n```\n\n\n```{r, message=F, warning=F, results='hide'}\n\n#Se ajusta el mejor modelo -------------------------------\n\nbest_model_Pr <- gstat::vgm(psill = fitvar1_exp_Pr$cov.pars[1],\n                           model = \"Exp\",\n                           range = fitvar1_exp_Pr$cov.pars[2],\n                           nugget = fitvar1_exp_Pr$nugget\n                           \n)\n\n# Se crea un objeto en gstat ------------------------------\n\ncoordinates(datosPr) <- ~Este + Norte\nproj4string(datosPr) <- CRS(\"EPSG:3310\")\n\ng_obj<-gstat::gstat(id=\"Presion\",\n             formula = Presion ~ Norte + Este,\n             model = best_model_Pr,\n             data = datosPr)\n\n#Kriging ------------------------------------------------\n\ninvisible(predic <- predict(g_obj, newdata = new))\n\n\n#Mapas de predicción -------------------------------------\n\ngridded(predic) <- TRUE\n\n#1. Mapa de Kriging --------------------------------------\n\npredic_raster_utm <- raster(predic, layer = \"Presion.pred\")\n\ncrs(predic_raster_utm) <- \"+init=epsg:3310\"\n\npredic_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        predic_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmin_pred <- raster::cellStats(predic_raster_wgs84, stat='min')\nmax_pred <- raster::cellStats(predic_raster_wgs84, stat='max')\n\npred_range <- c(minValue(predic_raster_wgs84), maxValue(predic_raster_wgs84))\n\nstep_pred <- (max_pred-min_pred)/ 6\n\nbins <- round(seq(min_pred, max_pred, by=step_pred),0)\n\npal_pred <- colorBin(\n  palette = \"viridis\", # La paleta de colores\n  domain = pred_range,\n  bins = bins,\n  na.color = \"transparent\"\n)\n\nmapa_kriging_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    predic_raster_wgs84, \n    colors = pal_pred, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n    addCircleMarkers(data = datosPr_sf_wgs84,\n                   fillColor = ~palPr(Presion),\n                   fillOpacity = 0.8,\n                   color = \"black\",\n                   weight = 1,\n                   radius = 3,\n                   popup = ~paste(\"Presión:\", Presion, \"mb\")) %>% \n  \n  addLegend(\n    pal = pal_pred, \n    values = pred_range,\n    title = \"Predicción Presión mb\",\n    position = \"topright\"\n  ) %>%\n  \n  addLegend(pal = palPr,\n            values = datosPr_sf_wgs84$Presion,\n            title = \"Presión Observada\",\n    position = \"topleft\"\n  ) \n\n#2 Mapa Varianza------------------------------------------\n\nvar_raster_utm <- raster(predic, layer = \"Presion.var\")\n\ncrs(var_raster_utm) <- \"+init=epsg:3310\"\n\nvar_raster_wgs84 <- raster::projectRaster(\n    raster::mask(\n        var_raster_utm, \n        sh_mundos_sp_utm_simple\n    ),\n    crs = \"+init=epsg:4326\", \n    method = \"bilinear\"\n)\n\nmax_var <- raster::cellStats(var_raster_wgs84, stat='max')\nstep_var <- max_var / 6\n\nbinsv <- round(seq(0, max_var, by=step_var),2)\n\nvar_range <- c(minValue(var_raster_wgs84), maxValue(var_raster_wgs84))\npal_var <- colorBin(\n  palette = \"Spectral\", # La paleta de colores\n  domain = var_range,\n  bins = binsv,\n  na.color = \"transparent\"\n)\n\nmapa_var_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    var_raster_wgs84,\n    colors = pal_var, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  addLegend(\n    pal = pal_var, \n    values = var_range,\n    title = \"Varianza\",\n    position = \"topright\"\n  ) \n\n#3. Mapa Cv ----------------------------------------------\n\ncv_raster_utm <- sqrt(var_raster_utm) / abs(predic_raster_utm)\n\nmapa_mayor_a_uno <- cv_raster_utm > 1\ncv_raster_utm[mapa_mayor_a_uno] <- 1\n\ncrs(cv_raster_utm) <- \"+init=epsg:3310\"\n\ncv_terra <- terra::rast(cv_raster_utm)\nsh_terra <- terra::vect(sh_mundos_sp_utm_simple)\n\nmasked_cv_terra <- terra::mask(cv_terra, sh_terra)\n\ncv_raster_wgs84_terra <- terra::project(\n    masked_cv_terra, \n    y = \"epsg:4326\", \n    method = \"bilinear\" # Similar a projectRaster\n)\n\ncv_raster_wgs84 <- raster::raster(cv_raster_wgs84_terra)\n\nmax_cv <- raster::cellStats(cv_raster_wgs84, stat='max')\nstep_cv <- max_cv / 10\n\nbincv <- seq(0,max_cv, by=step_cv)\n\ncv_range <- c(minValue(cv_raster_wgs84), maxValue(cv_raster_wgs84))\n\npal_cv <- colorBin(\n  palette = \"RdYlGn\", # Rojo-Amarillo-Verde\n  domain = cv_range,\n  na.color = \"transparent\",\n  bins = bincv,\n  reverse = TRUE\n)\n\nmapa_cv_leaflet <- leaflet() %>%\n  addProviderTiles(providers$CartoDB.Positron) %>%\n  addRasterImage(\n    cv_raster_wgs84,\n    colors = pal_cv, \n    opacity = 0.7,\n    group = \"Predicción Kriging\"\n  ) %>%\n  addLegend(\n    pal = pal_cv, \n    values = cv_range,\n    title = \"Coeficiente de Variación\",\n    position = \"topright\"\n  )\n\n```\n\n::: panel-tabset\n##### Predicción\n\n```{r}\nmapa_kriging_leaflet\n```\n\n##### Varianza\n\n```{r}\nmapa_var_leaflet\n```\n\n##### Coeficiente de variación\n\n```{r}\nmapa_cv_leaflet\n```\n\n:::\n\n## Conclusiones\n\n# Referencias {-}","srcMarkdownNoYaml":""},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":true,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"toc-depth":4,"number-sections":true,"html-math-method":"katex","css":["styles.css"],"include-after-body":["footer.html"],"embed-resources":false,"output-file":"Geo_uni.html"},"language":{"toc-title-document":"Tabla de contenidos","toc-title-website":"En esta página","related-formats-title":"Otros formatos","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Fuente","other-links-title":"Otros Enlaces","code-links-title":"Enlaces de código","launch-dev-container-title":"Iniciar Dev Container","launch-binder-title":"Iniciar Binder","article-notebook-label":"Cuaderno de Artículo","notebook-preview-download":"Descargar Cuaderno","notebook-preview-download-src":"Descargar código fuente","notebook-preview-back":"Volver al Artículo","manuscript-meca-bundle":"Archivo MECA","section-title-abstract":"Resumen","section-title-appendices":"Apéndices","section-title-footnotes":"Notas","section-title-references":"Referencias","section-title-reuse":"Reutilización","section-title-copyright":"Derechos de autor","section-title-citation":"Cómo citar","appendix-attribution-cite-as":"Por favor, cita este trabajo como:","appendix-attribution-bibtex":"BibTeX","appendix-view-license":"Ver Licencia","title-block-author-single":"Autor/a","title-block-author-plural":"Autores/as","title-block-affiliation-single":"Afiliación","title-block-affiliation-plural":"Afiliaciones","title-block-published":"Fecha de publicación","title-block-modified":"Fecha de modificación","title-block-keywords":"Palabras clave","callout-tip-title":"Tip","callout-note-title":"Nota","callout-warning-title":"Advertencia","callout-important-title":"Importante","callout-caution-title":"Precaución","code-summary":"Código","code-tools-menu-caption":"Código","code-tools-show-all-code":"Mostrar todo el código","code-tools-hide-all-code":"Ocultar todo el código","code-tools-view-source":"Ver el código fuente","code-tools-source-code":"Ejecutar el código","tools-share":"Compartir","tools-download":"Descargar","code-line":"Línea","code-lines":"Líneas","copy-button-tooltip":"Copiar al portapapeles","copy-button-tooltip-success":"Copiado","repo-action-links-edit":"Editar esta página","repo-action-links-source":"Ver el código","repo-action-links-issue":"Informar de un problema","back-to-top":"Volver arriba","search-no-results-text":"Sin resultados","search-matching-documents-text":"documentos encontrados","search-copy-link-title":"Copiar el enlace en la búsqueda","search-hide-matches-text":"Ocultar resultados adicionales","search-more-match-text":"resultado adicional en este documento","search-more-matches-text":"resultados adicionales en este documento","search-clear-button-title":"Borrar","search-text-placeholder":"","search-detached-cancel-button-title":"Cancelar","search-submit-button-title":"Enviar","search-label":"Buscar","toggle-section":"Alternar sección","toggle-sidebar":"Alternar barra lateral","toggle-dark-mode":"Alternar modo oscuro","toggle-reader-mode":"Alternar modo lector","toggle-navigation":"Navegación de palanca","crossref-fig-title":"Figura","crossref-tbl-title":"Tabla","crossref-lst-title":"Listado","crossref-thm-title":"Teorema","crossref-lem-title":"Lema","crossref-cor-title":"Corolario","crossref-prp-title":"Proposición","crossref-cnj-title":"Conjetura","crossref-def-title":"Definición","crossref-exm-title":"Ejemplo","crossref-exr-title":"Ejercicio","crossref-ch-prefix":"Capítulo","crossref-apx-prefix":"Apéndice","crossref-sec-prefix":"Sección","crossref-eq-prefix":"Ecuación","crossref-lof-title":"Listado de Figuras","crossref-lot-title":"Listado de Tablas","crossref-lol-title":"Listado de Listados","environment-proof-title":"Prueba","environment-remark-title":"Observación","environment-solution-title":"Solución","listing-page-order-by":"Ordenar por","listing-page-order-by-default":"Por defecto","listing-page-order-by-date-asc":"Menos reciente","listing-page-order-by-date-desc":"Más reciente","listing-page-order-by-number-desc":"De mayor a menor","listing-page-order-by-number-asc":"De menor a mayor","listing-page-field-date":"Fecha","listing-page-field-title":"Título","listing-page-field-description":"Descripción","listing-page-field-author":"Autor/a","listing-page-field-filename":"Nombre de archivo","listing-page-field-filemodified":"Fecha de modificación","listing-page-field-subtitle":"Subtítulo","listing-page-field-readingtime":"Tiempo de lectura","listing-page-field-wordcount":"Conteo de Palabras","listing-page-field-categories":"Categorías","listing-page-minutes-compact":"{0} minutos","listing-page-category-all":"Todas","listing-page-no-matches":"No hay resultados","listing-page-words":"{0} palabras","listing-page-filter":"Filtro","draft":"Borrador"},"metadata":{"lang":"es","fig-responsive":true,"quarto-version":"1.6.42","editor_options":{"chunk_output_type":"console"},"bibliography":["referencias.bib"],"nocite":"@*","toc-title":"Tabla de contenidos","code-summary":"Ver código","code-block-bg":true,"code-block-border-left":"#65a9e3","theme":{"light":"cosmo","dark":["cosmo","theme-dark.scss"]}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}