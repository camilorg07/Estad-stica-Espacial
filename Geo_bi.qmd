---
bibliography: referencias.bib
nocite: '@*'
---

::: {style="font-size: 1.5em; font-weight: bold; margin-bottom: 0.8em; margin-top: 0.5em;"}
Análisis Geoestadístico de la Temperatura y Velocidad del Viento en el Estado de California a las 00:00 horas del primero Marzo de 2024
:::

# Análisis Bivariado

## Planteamiento del problema

::: {.callout-caution appearance="simple"}
## En desarrollo...
:::

### Introducción

::: {.callout-caution appearance="simple"}
## En desarrollo...
:::

### Descripción de los datos

Los datos objeto de este estudio provienen de la [Agencia de Protección Ambiental (EPA)](https://www.epa.gov/) de los Estados Unidos y corresponden a registros horarios obtenidos de las estaciones de monitoreo durante el mes de marzo de 2024. En particular, se analizan las variables **Temperatura ambiente (Temp)** y **Velocidad del viento (WS)**.

#### Unidades

-   **Temperatura ambiente:** Medida en grados celsius (C°) con una intensidad horaria.

-   **Velocidad del viento:** Medida en metros por segundo (m/s) con una intensidad horaria.

### Objetivos

#### Objetivo general

::: {.callout-caution appearance="simple"}
## En desarrollo...
:::

#### Objetivos específicos

::: {.callout-caution appearance="simple"}
## En desarrollo...
:::

## Análisis Geoestadístico

Se consideran las variables **temperatura** y **velocidad del viento**:

```{r, warning=FALSE, message=FALSE}
library(readxl)
library(geoR)
library(matrixcalc)
library(dplyr)
library(geoR)
library(sp)
library(readxl)
library(tidyr)
library(sf)
library(ggplot2)
library(knitr)
library(plotly)
library(leaflet)
library(raster)
library(stars)
library(gstat)


cov_cos <- function(sigma, h, phi){
  sigma * cos(h/phi)
}

cos_sv <- function(nugget, sigma, h, phi){
  nugget +  sigma *(1 - cos(h/phi))
}

#Variable Temperatura ---------------------------------------

Temp <- read_excel("GeoEst_Cali.xlsx", sheet = "Temperatura")
colnames(Temp)[-1] <- as.numeric(colnames(Temp)[-1])
EstacionesT <- read_excel("GeoEst_Cali.xlsx", sheet = "Estaciones")
EstacionesT <- EstacionesT %>% mutate(AQSID = as.numeric(AQSID))
EstacionesT <- EstacionesT %>% filter(AQSID %in% colnames(Temp)[-1])

y_T <- Temp[1,] #Tomar una fecha
y_T <- cbind(colnames(y_T),t(y_T[1,]))
y_T <- y_T[-1,]
y_T <- as.data.frame(y_T)
y_T <- na.omit(y_T)
y_T <- y_T[-which.min(y_T$V2),]
y_T$V1 <- as.numeric(y_T$V1)
y_T <- inner_join(y_T, EstacionesT, by=c("V1"="AQSID"))
datosT <- y_T[,c(13,14,2)]
colnames(datosT)=c("Este","Norte","Temperatura")
datosT$Temperatura <- as.numeric(datosT$Temperatura)

temp <- as.geodata(datosT)



#Variable Velocidad del viento ------------------------------

WS <- read_excel("GeoEst_Cali.xlsx", sheet = "WindSpeed")
colnames(WS)[-1] <- as.numeric(colnames(WS)[-1])
EstacionesWS <- read_excel("GeoEst_Cali.xlsx", sheet = "Estaciones")
EstacionesWS <- EstacionesWS %>% mutate(AQSID = as.numeric(AQSID))
EstacionesWS <- EstacionesWS %>% filter(AQSID %in% colnames(WS)[-1])

y_WS <- WS[1,] #Tomar una fecha
y_WS <- cbind(colnames(y_WS),t(y_WS[1,]))
y_WS <- y_WS[-1,]
y_WS <- as.data.frame(y_WS)
y_WS <- na.omit(y_WS)
y_WS$V1 <- as.numeric(y_WS$V1)
y_WS <- inner_join(y_WS, EstacionesWS, by=c("V1"="AQSID"))
datosWS <- y_WS[,c(13,14,2)]
colnames(datosWS)=c("Este","Norte","WindSpeed")
datosWS$WindSpeed <- as.numeric(datosWS$WindSpeed)

ws <- as.geodata(datosWS)

```

::: panel-tabset
### Temperatura

```{r, message=FALSE, warning=FALSE}
pander::pander(summary(temp))
```

### Velocidad del viento

```{r, message=FALSE, warning=FALSE}
pander::pander(summary(ws))
```
:::

### Modelos Univariados

#### Estacionariedad en Media

::: panel-tabset
##### Temperatura

El modelo es: $$Temperatura = \beta_0 + \beta_1 \times Norte + \beta_2 \times Norte^2$$

```{r}
plot(temp, qt.col = c("purple",
                    "pink",
                    "green",
                    "yellow"),
     scatter3d=T, trend=~Norte+I(Norte^2))
fitT <- lm(Temperatura~Norte+I(Norte^2), data = datosT) 
pander::pander(summary(fitT))
```

##### Velocidad del viento

El modelo es: $$WindSpeed = \beta_0 + \beta_1 \times Este + \beta_2 \times Norte + + \beta_3 \times Este \times Norte$$

```{r}
plot(temp, qt.col = c("purple",
                      "pink",
                      "green",
                      "yellow"),
     scatter3d=T, trend=~Norte*Este)

fitWS <- lm(WindSpeed~Este*Norte, data = datosWS) 
pander::pander(summary(fitWS))
```
:::

#### Variogramas

##### Temperatura

Para esta variable ya se analizo y encontró un modelo apropiado en el [Capítulo 1](#cap1).

##### Velocidad del viento

Para esta variable ya se analizo y encontró un modelo apropiado en el [Capítulo 1](#cap1).

### Modelo cruzado de semivarianza

Considerando un modelo esférico para Temperatura y un modelo Wave para WS, las matrices para el modelo de coregionalización son:

```{r}
#| code-fold: false

mat1 <- cbind(c(8, 3.5),
              c(3.5, 1))

mat2 <-cbind(c(8, 3.5),
             c(3.5, 1))
```

```{r,, message=FALSE, warning=FALSE}

datosT1 <- datosT
datosWS1 <- datosWS
invisible(coordinates(datosT1) <- ~ Este + Norte)
invisible(coordinates(datosWS1) <- ~ Este + Norte)


vgmntemp <- vgm(psill = mat1[1, 1],
              model = "Sph",
              range = 2e5,
              nugget = .5,
              add.to = vgm(psill = mat2[1, 1],
                           model = "Wav",
                           range = .5e5, nugget = 2))

vgmws <- vgm(psill = mat1[2, 2],
             model = "Sph",
             range = 2e5,
             nugget = .5,
             add.to = vgm(psill = mat2[2, 2],
                          model = "Wav",
                          range = .5e5, nugget = 2))


vgmntemp_sv <- vgm(psill = mat1[1, 2], model = "Sph",
                 range = 2e5,
                 nugget = .5,
                 add.to = vgm(psill = mat2[1, 2],
                              model = "Wav",
                              range = .5e5, nugget = 2))



g <- gstat(NULL, id="Temp", formula=Temperatura~Norte+I(Norte^2),
           data=datosT1, model = vgmntemp)
g <- gstat(g, id="W_speed", formula=WindSpeed~Norte*Este,
           data=datosWS1, model = vgmws)
g <- gstat(g, c("Temp","W_speed"), model = vgmntemp_sv)

plot(variogram(g),
     model = g$model,
     pl = F,
     xlab = "Distancias",
     ylab = "Semivarianza")

```

::: {.callout-caution appearance="simple"}
## En desarrollo...
:::

### Cokriging

::: {.callout-caution appearance="simple"}
## En desarrollo...
:::

## Conclusiones

::: {.callout-caution appearance="simple"}
## En desarrollo...
:::

# Referencias {.unnumbered}
